/**
*  This code is part of the Harmony System implemented in Work Package 1 
*  of the Phosphorus project. This work is supported by the European 
*  Comission under the Sixth Framework Programme with contract number 
*  IST-034115.
*
*  Copyright (C) 2006-2009 Phosphorus WP1 partners. Phosphorus Consortium.
*  http://ist-phosphorus.eu/
 *
 * This is free software; you can redistribute it and/or modify it
 * under the terms of the GNU Lesser General Public License as
 * published by the Free Software Foundation; either version 2.1 of
 * the License, or (at your option) any later version.
 *
 * This software is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this software; if not, write to the Free
 * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
 * 02110-1301 USA, or see the FSF site: http://www.fsf.org.
 */


package org.opennaas.extension.idb.webservice;

import org.apache.muse.core.AbstractCapability;
import org.apache.muse.ws.addressing.soap.SoapFault;
import org.w3c.dom.Element;

import org.opennaas.extension.idb.serviceinterface.topology.ITopologyWS;
import org.opennaas.extension.idb.topology.handler.TopologyRequestHandler;

/**
 * nrpsDummyTopology server.
 * 
 * MyCapability.java Thu Jun 26 10:38:49 CEST 2008 Generated by the Apache Muse
 * Code Generation Tool
 */
public class TopologyWS extends AbstractCapability implements ITopologyWS {
    /* (non-Javadoc)
     * @see org.opennaas.extension.idb.da.dummy.webservice.ITopologyWS#addDomain(org.w3c.dom.Element)
     */
    public Element addDomain(final Element addDomain) throws SoapFault {
        return TopologyRequestHandler.getInstance().handle(addDomain, "addDomain");
    }

    /* (non-Javadoc)
     * @see org.opennaas.extension.idb.da.dummy.webservice.ITopologyWS#addEndpoint(org.w3c.dom.Element)
     */
    public Element addEndpoint(final Element addEndpoint) throws SoapFault {
        return TopologyRequestHandler.getInstance().handle(addEndpoint, "addEndpoint");
    }

    /* (non-Javadoc)
     * @see org.opennaas.extension.idb.da.dummy.webservice.ITopologyWS#addLink(org.w3c.dom.Element)
     */
    public Element addLink(final Element addLink) throws SoapFault {
        return TopologyRequestHandler.getInstance().handle(addLink, "addLink");
    }

    /* (non-Javadoc)
     * @see org.opennaas.extension.idb.da.dummy.webservice.ITopologyWS#deleteDomain(org.w3c.dom.Element)
     */
    public Element deleteDomain(final Element deleteDomain) throws SoapFault {
        return TopologyRequestHandler.getInstance().handle(deleteDomain, "deleteDomain");
    }

    /* (non-Javadoc)
     * @see org.opennaas.extension.idb.da.dummy.webservice.ITopologyWS#deleteEndpoint(org.w3c.dom.Element)
     */
    public Element deleteEndpoint(final Element deleteEndpoint)
            throws SoapFault {
        return TopologyRequestHandler.getInstance().handle(deleteEndpoint, "deleteEndpoint");
    }

    /* (non-Javadoc)
     * @see org.opennaas.extension.idb.da.dummy.webservice.ITopologyWS#deleteLink(org.w3c.dom.Element)
     */
    public Element deleteLink(final Element deleteLink) throws SoapFault {
        return TopologyRequestHandler.getInstance().handle(deleteLink, "deleteLink");
    }

    /* (non-Javadoc)
     * @see org.opennaas.extension.idb.da.dummy.webservice.ITopologyWS#editDomain(org.w3c.dom.Element)
     */
    public Element editDomain(final Element editDomain) throws SoapFault {
        return TopologyRequestHandler.getInstance().handle(editDomain, "editDomain");
    }

    /* (non-Javadoc)
     * @see org.opennaas.extension.idb.da.dummy.webservice.ITopologyWS#editEndpoint(org.w3c.dom.Element)
     */
    public Element editEndpoint(final Element editEndpoint) throws SoapFault {
        return TopologyRequestHandler.getInstance().handle(editEndpoint, "editEndpoint");
    }

    /* (non-Javadoc)
     * @see org.opennaas.extension.idb.da.dummy.webservice.ITopologyWS#editLink(org.w3c.dom.Element)
     */
    public Element editLink(final Element editLink) throws SoapFault {
        return TopologyRequestHandler.getInstance().handle(editLink, "editLink");
    }

    /* (non-Javadoc)
     * @see org.opennaas.extension.idb.da.dummy.webservice.ITopologyWS#getDomains(org.w3c.dom.Element)
     */
    public Element getDomains(final Element getDomains) throws SoapFault {
        return TopologyRequestHandler.getInstance().handle(getDomains, "getDomains");
    }

    /* (non-Javadoc)
     * @see org.opennaas.extension.idb.da.dummy.webservice.ITopologyWS#getEndpoints(org.w3c.dom.Element)
     */
    public Element getEndpoints(final Element getEndpoints) throws SoapFault {
        return TopologyRequestHandler.getInstance().handle(getEndpoints, "getEndpoints");
    }

    /* (non-Javadoc)
     * @see org.opennaas.extension.idb.da.dummy.webservice.ITopologyWS#getLinks(org.w3c.dom.Element)
     */
    public Element getLinks(final Element getLinks) throws SoapFault {
        return TopologyRequestHandler.getInstance().handle(getLinks, "getLinks");
    }

    /* (non-Javadoc)
     * @see org.opennaas.extension.idb.serviceinterface.topology.ITopologyWS#addOrEditDomain(org.w3c.dom.Element)
     */
    public Element addOrEditDomain(Element addOrEditDomain) throws Exception {
        return TopologyRequestHandler.getInstance().handle(addOrEditDomain, "addOrEditDomain");
    }

}