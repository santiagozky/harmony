package org.opennaas.extension.gmpls.webservice;

import javax.xml.namespace.QName;
import org.apache.muse.core.Environment;
import org.apache.muse.core.proxy.ReflectionProxyHandler;
import org.w3c.dom.Element;
import org.apache.muse.core.proxy.ProxyHandler;
import java.util.Map;
import org.apache.muse.ws.addressing.soap.SoapClient;
import java.util.HashMap;
import org.apache.muse.ws.resource.remote.WsResourceClient;
import org.apache.muse.ws.addressing.soap.SoapFault;
import org.apache.muse.ws.addressing.EndpointReference;

/**
 * gmpls client.
 *
 * GmplsClient.java
 * Thu Oct 09 15:04:36 CEST 2008
 * Generated by the Apache Muse Code Generation Tool
 */
 public class GmplsClient extends WsResourceClient implements IGmplsClient {


    /**
     * createPath Handler.
     *
     * @param createPath Request
     * @return createPath Response
     * @throws SoapFault In case of errors
     */
    public Element createPath (Element createPath)
            throws SoapFault {
        Object[] params = new Object[1];

        params[0] = createPath;

        ProxyHandler handler = getHandler("createPath");

        try {
            return (Element)invoke(handler, params);
        } catch (SoapFault e) {
            throw org.opennaas.extension.idb.serviceinterface.databinding.utils.FaultConverter
                .getInstance().getOriginalFault(e, this.getDestination());
        }
    }


    /**
     * getPathStatus Handler.
     *
     * @param getPathStatus Request
     * @return getPathStatus Response
     * @throws SoapFault In case of errors
     */
    public Element getPathStatus (Element getPathStatus)
            throws SoapFault {
        Object[] params = new Object[1];

        params[0] = getPathStatus;

        ProxyHandler handler = getHandler("getPathStatus");

        try {
            return (Element)invoke(handler, params);
        } catch (SoapFault e) {
            throw org.opennaas.extension.idb.serviceinterface.databinding.utils.FaultConverter
                .getInstance().getOriginalFault(e, this.getDestination());
        }
    }


    /**
     * getPathDiscovery Handler.
     *
     * @param getPathDiscovery Request
     * @return getPathDiscovery Response
     * @throws SoapFault In case of errors
     */
    public Element getPathDiscovery (Element getPathDiscovery)
            throws SoapFault {
        Object[] params = new Object[1];

        params[0] = getPathDiscovery;

        ProxyHandler handler = getHandler("getPathDiscovery");

        try {
            return (Element)invoke(handler, params);
        } catch (SoapFault e) {
            throw org.opennaas.extension.idb.serviceinterface.databinding.utils.FaultConverter
                .getInstance().getOriginalFault(e, this.getDestination());
        }
    }


    /**
     * terminatePath Handler.
     *
     * @param terminatePath Request
     * @return terminatePath Response
     * @throws SoapFault In case of errors
     */
    public Element terminatePath (Element terminatePath)
            throws SoapFault {
        Object[] params = new Object[1];

        params[0] = terminatePath;

        ProxyHandler handler = getHandler("terminatePath");

        try {
            return (Element)invoke(handler, params);
        } catch (SoapFault e) {
            throw org.opennaas.extension.idb.serviceinterface.databinding.utils.FaultConverter
                .getInstance().getOriginalFault(e, this.getDestination());
        }
    }


    /**
     * getEndpointDiscovery Handler.
     *
     * @param getEndpointDiscovery Request
     * @return getEndpointDiscovery Response
     * @throws SoapFault In case of errors
     */
    public Element getEndpointDiscovery (Element getEndpointDiscovery)
            throws SoapFault {
        Object[] params = new Object[1];

        params[0] = getEndpointDiscovery;

        ProxyHandler handler = getHandler("getEndpointDiscovery");

        try {
            return (Element)invoke(handler, params);
        } catch (SoapFault e) {
            throw org.opennaas.extension.idb.serviceinterface.databinding.utils.FaultConverter
                .getInstance().getOriginalFault(e, this.getDestination());
        }
    }

    private static final String[] _METHOD_NAMES = {
        "createPath", "getPathStatus", "getPathDiscovery", "terminatePath", "getEndpointDiscovery"
    };

    private static final Class[] _RETURN_TYPES = {
        Element.class, Element.class, Element.class, Element.class, Element.class
    };

    private static final String[] _ACTIONS = {
        "http://ist_phosphorus.eu/gmpls/webservice/createPath", "http://ist_phosphorus.eu/gmpls/webservice/getPathStatus", "http://ist_phosphorus.eu/gmpls/webservice/getPathDiscovery", "http://ist_phosphorus.eu/gmpls/webservice/terminatePath", "http://ist_phosphorus.eu/gmpls/webservice/getEndpointDiscovery"
    };

    private static final QName[] _REQUEST_NAMES = {
        new QName("http://ist_phosphorus.eu/gmpls/webservice", "createPath", "pfx0"), new QName("http://ist_phosphorus.eu/gmpls/webservice", "getPathStatus", "pfx0"), new QName("http://ist_phosphorus.eu/gmpls/webservice", "getPathDiscovery", "pfx0"), new QName("http://ist_phosphorus.eu/gmpls/webservice", "terminatePath", "pfx0"), new QName("http://ist_phosphorus.eu/gmpls/webservice", "getEndpointDiscovery", "pfx0")
    };

    private static final QName[] _RESPONSE_NAMES = {
        new QName("http://ist_phosphorus.eu/gmpls/webservice", "createPathResponse", "pfx0"), new QName("http://ist_phosphorus.eu/gmpls/webservice", "getPathStatusResponse", "pfx0"), new QName("http://ist_phosphorus.eu/gmpls/webservice", "getPathDiscoveryResponse", "pfx0"), new QName("http://ist_phosphorus.eu/gmpls/webservice", "terminatePathResponse", "pfx0"), new QName("http://ist_phosphorus.eu/gmpls/webservice", "getEndpointDiscoveryResponse", "pfx0")
    };

    private static final QName[][] _REQUEST_PARAM_NAMES = { {
            new QName("http://ist_phosphorus.eu/gmpls/webservice", "createPath", "pfx0")
        }, {
            new QName("http://ist_phosphorus.eu/gmpls/webservice", "getPathStatus", "pfx0")
        }, {
            new QName("http://ist_phosphorus.eu/gmpls/webservice", "getPathDiscovery", "pfx0")
        }, {
            new QName("http://ist_phosphorus.eu/gmpls/webservice", "terminatePath", "pfx0")
        }, {
            new QName("http://ist_phosphorus.eu/gmpls/webservice", "getEndpointDiscovery", "pfx0")
        }
    };
    public GmplsClient(EndpointReference param0) {
        super(param0);
    }

    public GmplsClient(EndpointReference param0, EndpointReference param1) {
        super(param0, param1);
    }

    public GmplsClient(EndpointReference param0, EndpointReference param1, Environment param2) {
        super(param0, param1, param2);
    }

    public GmplsClient(EndpointReference param0, EndpointReference param1, SoapClient param2) {
        super(param0, param1, param2);
    }

    protected ProxyHandler getHandler(String methodName) {
        return (ProxyHandler)_HANDLERS_BY_NAME.get(methodName);
    }

    private static final Map _HANDLERS_BY_NAME = new HashMap();

    static {
        for (int n = 0; n < _METHOD_NAMES.length; ++n) {
            ProxyHandler handler = new ReflectionProxyHandler();
            handler.setAction(_ACTIONS[n]);
            handler.setRequestName(_REQUEST_NAMES[n]);
            handler.setRequestParameterNames(_REQUEST_PARAM_NAMES[n]);
            handler.setResponseName(_RESPONSE_NAMES[n]);
            handler.setReturnType(_RETURN_TYPES[n]);

            _HANDLERS_BY_NAME.put(_METHOD_NAMES[n], handler);
        }
    }}
