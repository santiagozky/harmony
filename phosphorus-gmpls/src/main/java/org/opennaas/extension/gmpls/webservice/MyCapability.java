package org.opennaas.extension.gmpls.webservice;

import org.w3c.dom.Element;
import org.opennaas.extension.gmpls.handler.GmplsRequestHandler;
import org.apache.muse.core.AbstractCapability;

/**
 * reservation server.
 *
 * MyCapability.java
 * Thu Oct 09 15:04:33 CEST 2008
 * Generated by the Apache Muse Code Generation Tool
 */
 public class MyCapability extends AbstractCapability implements IMyCapability {
    /**
     * getPathStatus Handler.
     *
     * @param getPathStatus Request
     * @return getPathStatus Response
     * @throws Exception In case of errors
     */
    public Element getPathStatus (final Element getPathStatus)
             throws Exception {
        return GmplsRequestHandler.getInstance().handle("getPathStatus", getPathStatus);
    }

    /**
     * getEndpointDiscovery Handler.
     *
     * @param getEndpointDiscovery Request
     * @return getEndpointDiscovery Response
     * @throws Exception In case of errors
     */
    public Element getEndpointDiscovery (final Element getEndpointDiscovery)
             throws Exception {
        return GmplsRequestHandler.getInstance().handle("getEndpointDiscovery", getEndpointDiscovery);
    }

    /**
     * getPathDiscovery Handler.
     *
     * @param getPathDiscovery Request
     * @return getPathDiscovery Response
     * @throws Exception In case of errors
     */
    public Element getPathDiscovery (final Element getPathDiscovery)
             throws Exception {
        return GmplsRequestHandler.getInstance().handle("getPathDiscovery", getPathDiscovery);
    }

    /**
     * createPath Handler.
     *
     * @param createPath Request
     * @return createPath Response
     * @throws Exception In case of errors
     */
    public Element createPath (final Element createPath)
             throws Exception {
        return GmplsRequestHandler.getInstance().handle("createPath", createPath);
    }

    /**
     * terminatePath Handler.
     *
     * @param terminatePath Request
     * @return terminatePath Response
     * @throws Exception In case of errors
     */
    public Element terminatePath (final Element terminatePath)
             throws Exception {
        return GmplsRequestHandler.getInstance().handle("terminatePath", terminatePath);
    }

}