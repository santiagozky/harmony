<?xml version="1.0" encoding="UTF-8"?>
<!--
 This code is part of the Harmony System implemented in Work Package 1 
 of the Phosphorus project. This work is supported by the European 
 Comission under the Sixth Framework Programme with contract number 
 IST-034115.

 Copyright (C) 2006-2009 Phosphorus WP1 partners. Phosphorus Consortium.
 http://ist-phosphorus.eu/

 This is free software; you can redistribute it and/or modify it
 under the terms of the GNU Lesser General Public License as
 published by the Free Software Foundation; either version 2.1 of
 the License, or (at your option) any later version.
 
 This software is distributed in the hope that it will be useful,
 but WITHOUT ANY WARRANTY; without even the implied warranty of
 MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 Lesser General Public License for more details.
 
 You should have received a copy of the GNU Lesser General Public
 License along with this software; if not, write to the Free
 Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
 02110-1301 USA, or see the FSF site: http://www.fsf.org.

-->
<xs:schema xmlns:wsbf="http://docs.oasis-open.org/wsrf/bf-2"
	xmlns:nspc="http://opennaas.org/nsp"
	xmlns:not="http://opennaas.org/nsp/webservice/notification"
	xmlns:res="http://opennaas.org/nsp/webservice/reservation"
	xmlns:xs="http://www.w3.org/2001/XMLSchema"
	xmlns:wsa="http://www.w3.org/2005/08/addressing"
	targetNamespace="http://opennaas.org/nsp/webservice/notification"
	elementFormDefault="qualified"
	attributeFormDefault="unqualified">
	<xs:import namespace="http://opennaas.org/nsp/webservice/reservation" schemaLocation="Reservation-Types.xsd"/>
	<xs:import namespace="http://opennaas.org/nsp" schemaLocation="CommonTypes.xsd"/>
	<xs:import namespace="http://docs.oasis-open.org/wsrf/bf-2" schemaLocation="./wsrf/WS-BaseFaults-1_2.xsd"/>
  	<xs:import namespace="http://www.w3.org/2005/08/addressing" schemaLocation="./wsrf/WS-Addressing-2005_08.xsd"/>	<!-- Elements, request and response types ___________________________________-->

	<!-- Subscribe ____________________________________________________________-->

	<xs:element name="subscribe">
		<xs:annotation>
			<xs:documentation>
				Subscribes a EndpointReference to a topic
			</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:sequence>
				<xs:element name="subscribe" type="not:subscribeType"/>
			</xs:sequence>
		</xs:complexType>
	</xs:element>

	<xs:complexType name="subscribeType">
		<xs:sequence>
			<xs:element name="ConsumerReference" type="not:ConsumerIdentifierType" minOccurs="1" maxOccurs="1" />
			<xs:element name="Topic" type="not:TopicIdentifierType" minOccurs="1" maxOccurs="1" />			
		</xs:sequence>
	</xs:complexType>

	<xs:element name="subscribeResponse">
		<xs:annotation>
			<xs:documentation>
				Answers an subscribe message
			</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:sequence>
				<xs:element name="subscribeResponse" type="not:subscribeResponseType"/>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	
	<xs:complexType name="subscribeResponseType">
		<xs:sequence>
			<xs:element name="Result" type="xs:boolean"/>
		</xs:sequence>
	</xs:complexType>

	<!-- Unsubscribe ______________________________________________________________-->

	<xs:element name="unsubscribe">
		<xs:annotation>
			<xs:documentation>
				Unsubscribes a EndpointReference from a topic
			</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:sequence>
				<xs:element name="unsubscribe" type="not:unsubscribeType"/>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	
	<xs:complexType name="unsubscribeType">
		<xs:sequence>
			<xs:element name="ConsumerReference" type="not:ConsumerIdentifierType" minOccurs="1" maxOccurs="1" />
			<xs:element name="Topic" type="not:TopicIdentifierType" minOccurs="1" maxOccurs="1" />			
		</xs:sequence>
	</xs:complexType>

	<xs:element name="unsubscribeResponse">
		<xs:annotation>
			<xs:documentation>
				Answers a unsubscribe message
			</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:sequence>
				<xs:element name="unsubscribeResponse" type="not:unsubscribeResponseType"/>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	
	<xs:complexType name="unsubscribeResponseType">
		<xs:sequence>
			<xs:element name="Result" type="xs:boolean"/>
		</xs:sequence>
	</xs:complexType>

	<!--GetTopics ___________________________________________________________________-->

	<xs:element name="getTopics">
		<xs:annotation>
			<xs:documentation>
				Get all existing topics
			</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:sequence>
				<xs:element name="getTopics" type="not:getTopicsType"/>
			</xs:sequence>
		</xs:complexType>
	</xs:element>

	<xs:complexType name="getTopicsType">
		<xs:sequence/>
	</xs:complexType>

	<xs:element name="getTopicsResponse">
		<xs:annotation>
			<xs:documentation>
				Returns all existing topics
			</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:sequence>
				<xs:element name="getTopicsResponse" type="not:getTopicsResponseType"/>
			</xs:sequence>
		</xs:complexType>
	</xs:element>

	<xs:complexType name="getTopicsResponseType">
		<xs:sequence>
			<xs:element name="Topics" type="not:TopicIdentifierType" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>

	<!--notification ___________________________________________________________________-->

	<xs:complexType name="notificationType">
		<xs:sequence>
			<xs:element name="Topic" type="not:TopicIdentifierType" minOccurs="1" maxOccurs="1" />
			<xs:element name="NotificationList" type="not:NotificationMessageType" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>

	<xs:complexType name="notificationResponseType">
		<xs:sequence/>
	</xs:complexType>

	<!--publish ___________________________________________________________________-->

	<xs:element name="publish">
		<xs:annotation>
			<xs:documentation>
				publish a message on a specific topic
			</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:sequence>
				<xs:element name="publish" type="not:publishType"/>
			</xs:sequence>
		</xs:complexType>
	</xs:element>

	<xs:complexType name="publishType">
		<xs:sequence>
			<xs:element name="Topic" type="not:TopicIdentifierType" minOccurs="1" maxOccurs="1" />
			<xs:element name="NotificationList" type="not:NotificationMessageType" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>

	<xs:element name="publishResponse">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="publishResponse" type="not:publishResponseType"/>
			</xs:sequence>
		</xs:complexType>
	</xs:element>

	<xs:complexType name="publishResponseType">
		<xs:sequence>
			<xs:element name="Result" type="xs:boolean"/>
		</xs:sequence>
	</xs:complexType>

	<!--addTopic ___________________________________________________________________-->

	<xs:element name="addTopic">
		<xs:annotation>
			<xs:documentation>
				add a topic for notification
			</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:sequence>
				<xs:element name="addTopic" type="not:addTopicType"/>
			</xs:sequence>
		</xs:complexType>
	</xs:element>

	<xs:complexType name="addTopicType">
		<xs:sequence>
			<xs:element name="Topic" type="not:TopicIdentifierType" minOccurs="1" maxOccurs="1" />
		</xs:sequence>
	</xs:complexType>

	<xs:element name="addTopicResponse">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="addTopicResponse" type="not:addTopicResponseType"/>
			</xs:sequence>
		</xs:complexType>
	</xs:element>

	<xs:complexType name="addTopicResponseType">
		<xs:sequence>
			<xs:element name="Result" type="xs:boolean"/>
		</xs:sequence>
	</xs:complexType>

	<!--removeTopic ___________________________________________________________________-->

	<xs:element name="removeTopic">
		<xs:annotation>
			<xs:documentation>
				remove a topic from notification
			</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:sequence>
				<xs:element name="removeTopic" type="not:removeTopicType"/>
			</xs:sequence>
		</xs:complexType>
	</xs:element>

	<xs:complexType name="removeTopicType">
		<xs:sequence>
			<xs:element name="Topic" type="not:TopicIdentifierType" minOccurs="1" maxOccurs="1" />
		</xs:sequence>
	</xs:complexType>

	<xs:element name="removeTopicResponse">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="removeTopicResponse" type="not:removeTopicResponseType"/>
			</xs:sequence>
		</xs:complexType>
	</xs:element>

	<xs:complexType name="removeTopicResponseType">
		<xs:sequence>
			<xs:element name="Result" type="xs:boolean"/>
		</xs:sequence>
	</xs:complexType>

	<!-- Identifier ___________________________________________________________________-->

	<xs:simpleType name="ConsumerIdentifierType">
		<xs:restriction base="xs:string"/>
	</xs:simpleType>

	<xs:simpleType name="TopicIdentifierType">
		<xs:restriction base="xs:string"/>
	</xs:simpleType>

	<xs:complexType name="NotificationMessageType">
		<xs:sequence>
			<xs:element name="ServiceStatus" minOccurs="0" maxOccurs="1" type="res:ServiceStatusType">
				<xs:annotation>
					<xs:documentation>
						Status of the reservation
					</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	
	<!-- Faults ___________________________________________________________________-->
	
	<xs:element name="TopicNotFoundFault">
		<xs:annotation>
			<xs:documentation>
				Returned in case a given topic is not existent.
			</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:complexContent>
				<xs:extension base="not:NotificationFault"/>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	
	<xs:complexType name="NotificationFault">
		<xs:complexContent>
			<xs:extension base="wsbf:BaseFaultType"/>
		</xs:complexContent>
	</xs:complexType>
	
</xs:schema>
