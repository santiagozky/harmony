<?xml version="1.0" encoding="UTF-8"?>
<!--
 This code is part of the Harmony System implemented in Work Package 1 
 of the Phosphorus project. This work is supported by the European 
 Comission under the Sixth Framework Programme with contract number 
 IST-034115.

 Copyright (C) 2006-2009 Phosphorus WP1 partners. Phosphorus Consortium.
 http://ist-phosphorus.eu/

 This is free software; you can redistribute it and/or modify it
 under the terms of the GNU Lesser General Public License as
 published by the Free Software Foundation; either version 2.1 of
 the License, or (at your option) any later version.
 
 This software is distributed in the hope that it will be useful,
 but WITHOUT ANY WARRANTY; without even the implied warranty of
 MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 Lesser General Public License for more details.
 
 You should have received a copy of the GNU Lesser General Public
 License along with this software; if not, write to the Free
 Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
 02110-1301 USA, or see the FSF site: http://www.fsf.org.

-->
<xs:schema xmlns:wsbf="http://docs.oasis-open.org/wsrf/bf-2"
	xmlns:nspc="http://opennaas.org/nsp" xmlns:nsp="http://opennaas.org/nsp/webservice/reservation"
	xmlns:not="http://opennaas.org/nsp/webservice/notification"
	xmlns:xs="http://www.w3.org/2001/XMLSchema" targetNamespace="http://opennaas.org/nsp/webservice/reservation"
	elementFormDefault="qualified" attributeFormDefault="unqualified">
	<xs:import namespace="http://opennaas.org/nsp"
		schemaLocation="CommonTypes.xsd" />
	<xs:import namespace="http://opennaas.org/nsp/webservice/notification"
		schemaLocation="Notification-Types.xsd" />
	<xs:import namespace="http://docs.oasis-open.org/wsrf/bf-2"
		schemaLocation="./wsrf/WS-BaseFaults-1_2.xsd" />
	<!--
		Elements, request and response types
		___________________________________
	-->
	<!--
		IsAvailable
		____________________________________________________________
	-->
	<xs:element name="isAvailable">
		<xs:annotation>
			<xs:documentation>
				Checks the availability of network resources
			</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:sequence>
				<xs:element name="isAvailable" type="nsp:IsAvailableType" />
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name="isAvailableResponse">
		<xs:annotation>
			<xs:documentation>
				Answers an isAvailable message
			</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:sequence>
				<xs:element name="isAvailableResponse" type="nsp:IsAvailableResponseType" />
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="IsAvailableType">
		<xs:sequence>
			<xs:element name="Service" type="nsp:ServiceConstraintType"
				maxOccurs="unbounded" />
			<xs:element name="JobID" type="nsp:JobIdentifierType"
				minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						If a job ID is defined, then this is a
						pre-reservation request, else it is a
						(permanent) reservation
						request. A value of 0
						means that this request starts a new job and
						hence, a new unique job ID is to be returned in
						the ReqResponse.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="SubdomainRestriction" type="xs:boolean"
				minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						This flag is not intended for the user /
						middleware, but only
						for NSP internal use. If it is set, only
						subdomains will be
						involved in interdomain routes, not peer
						domains.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="IsAvailableResponseType">
		<xs:sequence>
			<xs:element name="DetailedResult" type="nsp:ConnectionAvailabilityType"
				maxOccurs="unbounded" />
			<xs:element name="AlternativeStartTimeOffset" type="xs:long"
				minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						Time offset (in seconds) to be added to start
						times for feasible alternative start times.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<!--
		CreateReservation
		______________________________________________________
	-->
	<xs:element name="createReservation">
		<xs:annotation>
			<xs:documentation>
				Reserve network resources
			</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:sequence>
				<xs:element name="createReservation" type="nsp:CreateReservationType" />
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name="createReservationResponse">
		<xs:annotation>
			<xs:documentation>
				Answers a createReservation message
			</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:sequence>
				<xs:element name="createReservationResponse" type="nsp:CreateReservationResponseType" />
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="CreateReservationType">
		<xs:sequence>
			<xs:element name="Service" type="nsp:ServiceConstraintType"
				maxOccurs="unbounded" />
			<xs:element name="JobID" type="nsp:JobIdentifierType"
				minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						If a job ID is defined, then this is a
						pre-reservation request, else it is a
						(permanent) reservation
						request. A value of 0
						means that this request starts a new job and
						hence, a new unique job ID is to be returned in
						the ReqResponse.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="NotificationConsumerURL" type="xs:string"
				minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						URL of a NotificationConsumer that is to be
						notified when any of the services' status
						changes.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="SubdomainRestriction" type="xs:boolean"
				minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						This flag is not intended for the user /
						middleware, but only
						for NSP internal use. If it is set, only
						subdomains will be
						involved in interdomain routes, not peer
						domains.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GRI" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						Global Reservation Identifier.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Token" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						The security Token that will be validated by the
						TVS.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="SamlAssertion" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						The security SAML assertion that will be validated by the GAAAtk.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Trunk" type="nspc:Tuple" minOccurs="0"
				maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>
						Additional Data for any purpose.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="CreateReservationResponseType">
		<xs:sequence>
			<xs:element name="JobID" type="nsp:JobIdentifierType"
				minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						A new job ID is generated by the Network Service
						Plane in reponse to a pre-reservation request
						whose job ID was set
						to 0.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ReservationID" type="nsp:ReservationIdentifierType">
				<xs:annotation>
					<xs:documentation>
						If the reservation was successful, a new
						reservation ID is generated.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GRI" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						Global Reservation Identifier.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Token" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						The security Token that will be validated by the
						TVS.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<!--
		GetReservations _____________________________________________________
	-->
	<xs:element name="getReservations">
		<xs:annotation>
			<xs:documentation>
				Get all existing reservations
			</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:sequence>
				<xs:element name="getReservations" type="nsp:GetReservationsType" />
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name="getReservationsResponse">
		<xs:annotation>
			<xs:documentation>
				Returns all existing reservations
			</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:sequence>
				<xs:element name="getReservationsResponse" type="nsp:GetReservationsResponseType" />
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="GetReservationsType">
		<xs:annotation>
			<xs:documentation>
				Get reservations ending or starting in a given
				time-period
			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="PeriodStartTime" type="xs:dateTime">
				<xs:annotation>
					<xs:documentation>
						Indicates the beginning of the chosen time-period
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PeriodEndTime" type="xs:dateTime">
				<xs:annotation>
					<xs:documentation>
						Indicates the end of the chosen time-period
					</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="GetReservationsResponseType">
		<xs:sequence>
			<xs:element name="Reservation" type="nsp:GetReservationsComplexType"
				minOccurs="0" maxOccurs="unbounded" />
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="GetReservationsComplexType">
		<xs:sequence>
			<xs:element name="ReservationID" type="nsp:ReservationIdentifierType" />
			<xs:element name="GRI" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						Global Reservation Identifier.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Reservation" type="nsp:GetReservationResponseType" />
		</xs:sequence>
	</xs:complexType>
	<!--
		GetReservation ______________________________________________________
	-->
	<xs:element name="getReservation">
		<xs:annotation>
			<xs:documentation>
				Get input from createReservation request
			</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:sequence>
				<xs:element name="getReservation" type="nsp:GetReservationType" />
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name="getReservationResponse">
		<xs:annotation>
			<xs:documentation>
				Answers a getReservation message
			</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:sequence>
				<xs:element name="getReservationResponse" type="nsp:GetReservationResponseType" />
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="GetReservationType">
		<xs:annotation>
			<xs:documentation>
				Get input from createReservation request
			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="ReservationID" type="nsp:ReservationIdentifierType" />
			<xs:element name="GRI" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						Global Reservation Identifier.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ServiceID" type="nsp:ServiceIdentifierType"
				minOccurs="0" maxOccurs="unbounded" />
			<xs:element name="Token" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						The security Token that will be validated by the
						TVS.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="GetReservationResponseType">
		<xs:sequence>
			<xs:element name="Service" type="nsp:ServiceConstraintType"
				maxOccurs="unbounded" />
			<xs:element name="JobID" type="nsp:JobIdentifierType"
				minOccurs="0" />
			<xs:element name="NotificationConsumerURL" type="xs:string"
				minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						URL of a NotificationConsumer that is to be
						notified when any of the services' status
						changes.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<!--
		GetStatus
		______________________________________________________________
	-->
	<xs:element name="getStatus">
		<xs:annotation>
			<xs:documentation>
				Retrieves the status of a reservation
			</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:sequence>
				<xs:element name="getStatus" type="nsp:GetStatusType" />
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name="getStatusResponse">
		<xs:annotation>
			<xs:documentation>
				Answers a getStatus message
			</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:sequence>
				<xs:element name="getStatusResponse" type="nsp:GetStatusResponseType" />
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="GetStatusType">
		<xs:sequence>
			<xs:element name="ReservationID" type="nsp:ReservationIdentifierType" />
			<xs:element name="GRI" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						Global Reservation Identifier.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ServiceID" type="nsp:ServiceIdentifierType"
				minOccurs="0" maxOccurs="unbounded" />
			<xs:element name="Token" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						The security Token that will be validated by the
						TVS.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="GetStatusResponseType">
		<xs:sequence>
			<xs:element name="ServiceStatus" minOccurs="0" maxOccurs="unbounded">
				<xs:complexType>
					<xs:complexContent>
						<xs:extension base="nsp:ServiceStatusType" />
					</xs:complexContent>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<!--
		CancelReservation
		______________________________________________________
	-->
	<xs:element name="cancelReservation">
		<xs:annotation>
			<xs:documentation>
				Cancels a reservation
			</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:sequence>
				<xs:element name="cancelReservation" type="nsp:CancelReservationType" />
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name="cancelReservationResponse">
		<xs:annotation>
			<xs:documentation>
				Answers a cancelReservation message
			</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:sequence>
				<xs:element name="cancelReservationResponse" type="nsp:CancelReservationResponseType" />
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="CancelReservationType">
		<xs:sequence>
			<xs:element name="ReservationID" type="nsp:ReservationIdentifierType">
				<xs:annotation>
					<xs:documentation>
						The Reservation identifier of the reservation to
						be cancelled.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GRI" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						Global Reservation Identifier.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Token" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						The security Token that will be validated by the
						TVS.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="CancelReservationResponseType">
		<xs:sequence>
			<xs:element name="Success" type="xs:boolean">
				<xs:annotation>
					<xs:documentation>
						Indicates if the request has been successful
						(True) or not (False)
					</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<!--
		CompleteJob
		____________________________________________________________
	-->
	<xs:element name="completeJob">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="completeJob" type="nsp:CompleteJobType" />
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name="completeJobResponse">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="completeJobResponse" type="nsp:CompleteJobResponseType" />
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="CompleteJobType">
		<xs:sequence>
			<xs:element name="JobID" type="nsp:JobIdentifierType" />
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="CompleteJobResponseType">
		<xs:sequence>
			<xs:element name="Success" type="xs:boolean" />
		</xs:sequence>
	</xs:complexType>
	<!--
		CancelJob
		______________________________________________________________
	-->
	<xs:element name="cancelJob">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="cancelJob" type="nsp:CancelJobType" />
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name="cancelJobResponse">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="cancelJobResponse" type="nsp:CancelJobResponseType" />
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="CancelJobType">
		<xs:sequence>
			<xs:element name="JobID" type="nsp:JobIdentifierType" />
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="CancelJobResponseType">
		<xs:sequence>
			<xs:element name="Success" type="xs:boolean" />
		</xs:sequence>
	</xs:complexType>
	<!--
		Activate
		_______________________________________________________________
	-->
	<xs:element name="activate">
		<xs:annotation>
			<xs:documentation>
				Activates a service
			</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:sequence>
				<xs:element name="activate" type="nsp:ActivateType" />
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name="activateResponse">
		<xs:annotation>
			<xs:documentation>
				Answers an activate message
			</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:sequence>
				<xs:element name="activateResponse" type="nsp:ActivateResponseType" />
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="ActivateType">
		<xs:sequence>
			<xs:element name="ReservationID" type="nsp:ReservationIdentifierType" />
			<xs:element name="GRI" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						Global Reservation Identifier.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ServiceID" type="nsp:ServiceIdentifierType" />
			<xs:element name="Token" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						The security Token that will be validated by the
						TVS.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="ActivateResponseType">
		<xs:sequence>
			<xs:element name="Success" type="xs:boolean">
				<xs:annotation>
					<xs:documentation>
						Indicates if the request has been successful
						(True) or not (False)
					</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<!--
		Bind
		___________________________________________________________________
	-->
	<xs:element name="bind">
		<xs:annotation>
			<xs:documentation>
				Create binding between NRPS endpoint and
				application endpoint
			</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:sequence>
				<xs:element name="bind" type="nsp:BindType" />
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name="bindResponse">
		<xs:annotation>
			<xs:documentation>
				Answers a bind message
			</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:sequence>
				<xs:element name="bindResponse" type="nsp:BindResponseType" />
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="BindType">
		<xs:sequence>
			<xs:element name="ReservationID" type="nsp:ReservationIdentifierType">
				<xs:annotation>
					<xs:documentation>
						Unique identifier of the reservation
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GRI" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						Global Reservation Identifier.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ServiceID" type="nsp:ServiceIdentifierType">
				<xs:annotation>
					<xs:documentation>
						The Service identifier of the service we want to
						bind.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Token" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						The security Token that will be validated by the
						TVS.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ConnectionID" type="nsp:ConnectionIdentifierType" />
			<xs:element name="EndpointID" type="nspc:EndpointIdentifierType">
				<xs:annotation>
					<xs:documentation>
						The endpoint to bind
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="IPAdress" type="xs:string" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>
						List of IP adresses
					</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="BindResponseType">
		<xs:sequence>
			<xs:element name="Success" type="xs:boolean">
				<xs:annotation>
					<xs:documentation>
						Indicates if the request has been successful
						(True) or not (False)
					</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<!--
		Identifier-Types
		_______________________________________________________
	-->
	<xs:simpleType name="ConnectionIdentifierType">
		<xs:annotation>
			<xs:documentation>
				Type used for connection IDs (unique within a
				single
				service)
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:int" />
	</xs:simpleType>
	<xs:simpleType name="ServiceIdentifierType">
		<xs:annotation>
			<xs:documentation>
				Type used for service IDs (unique within a single
				reservation)
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:int" />
	</xs:simpleType>
	<xs:simpleType name="ReservationIdentifierType">
		<xs:annotation>
			<xs:documentation>
				Type used for reservation IDs
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string" />
	</xs:simpleType>
	<xs:simpleType name="JobIdentifierType">
		<xs:annotation>
			<xs:documentation>
				Type used for job IDs
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:long" />
	</xs:simpleType>
	<!--
		enumerations
		___________________________________________________________
	-->
	<xs:simpleType name="ReservationType">
		<xs:annotation>
			<xs:documentation>
				Type of reservation constraints: Fixed, deferrable,
				or malleable.
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="fixed" />
			<xs:enumeration value="deferrable" />
			<xs:enumeration value="malleable" />
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="StatusType">
		<xs:annotation>
			<xs:documentation>
				Enumeration of possible service / connection status
				values.
                	</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="active" />
			<xs:enumeration value="setup_in_progress" />
			<xs:enumeration value="teardown_in_progress" />
			<xs:enumeration value="completed" />
			<xs:enumeration value="pending" />
			<xs:enumeration value="cancelled_by_user" />
			<xs:enumeration value="cancelled_by_system" />
			<xs:enumeration value="unknown" />
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="AvailabilityCodeType">
		<xs:annotation>
			<xs:documentation>
				Possible return values for availability requests.
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="available" />
			<xs:enumeration value="endpoint_not_available" />
			<xs:enumeration value="path_not_available" />
			<xs:enumeration value="availability_not_checked" />
		</xs:restriction>
	</xs:simpleType>
	<!--
		types used for connections
		_____________________________________________
	-->
	<xs:complexType name="ConnectionType">
		<xs:annotation>
			<xs:documentation>
				Stores connection data: Connection ID, involved
				endpoints and directionality
			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="ConnectionID" type="nsp:ConnectionIdentifierType">
				<xs:annotation>
					<xs:documentation>
						Identifier of the connection, unique
						within a
						single service
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Source" type="nspc:EndpointType">
				<xs:annotation>
					<xs:documentation>
						Source end point TNA
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Target" type="nspc:EndpointType"
				maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>
						Destination(s) end point(s) TNA(s)
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Directionality" type="xs:int">
				<xs:annotation>
					<xs:documentation>
						Possible values: 0="unidirectional tree",
						1="bidirectional tree", 3="full mesh"
					</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="ConnectionConstraintType">
		<xs:annotation>
			<xs:documentation>
				Type used to specify constraints for a requested
				connection.
			</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="nsp:ConnectionType">
				<xs:sequence>
					<xs:element name="MinBW" type="xs:int">
						<xs:annotation>
							<xs:documentation>
								Minimum bandwidth in Mbps
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="MaxBW" type="xs:int" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
								Maximum bandwidth in Mbps
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="MaxDelay" type="xs:int" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
								Maximum delay in milliseconds
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="DataAmount" type="xs:long" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
								Indicates the amount of data to be transferred,
								in MBytes (required for and only for malleable
								reservations!)
							</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="ConnectionAvailabilityType">
		<xs:annotation>
			<xs:documentation>
				Stores the availability of a connection
			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="ServiceID" type="nsp:ServiceIdentifierType">
				<xs:annotation>
					<xs:documentation>
						Unique identifier of the service
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ConnectionID" type="nsp:ConnectionIdentifierType">
				<xs:annotation>
					<xs:documentation>
						Unique identifier of the connection
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Availability" type="nsp:AvailabilityCodeType">
				<xs:annotation>
					<xs:documentation>
						Result of availability check for this connection
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="BlockedEndpoints" type="nspc:EndpointIdentifierType"
				minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>
						If one or more of the requested endpoints are
						unavailable,
						they are listed here
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MaxBW" type="xs:int" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						Maximum available bandwidth in Mbps (only set if
						the
						corresponding MaxBW was set in the availability request)
					</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="ConnectionStatusType">
		<xs:annotation>
			<xs:documentation>
				Type used to return status information for a
				connection.
			</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="nsp:ConnectionType">
				<xs:sequence>
					<xs:element name="Status" type="nsp:StatusType" />
					<xs:element name="DomainStatus" type="nsp:DomainConnectionStatusType"
						minOccurs="0" maxOccurs="unbounded" />
					<xs:element name="ActualBW" type="xs:int">
						<xs:annotation>
							<xs:documentation>
								Actual bandwidth in Mbps
							</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="DomainConnectionStatusType">
		<xs:annotation>
			<xs:documentation>
				Tuple of domain ID and ConnectionStatusType
			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Domain" type="nspc:DomainIdentifierType" />
			<xs:element name="Status" type="nsp:ConnectionStatusType" />
		</xs:sequence>
	</xs:complexType>

	<!--
		notification
		___________________________________________________________________
	-->

	<xs:element name="notification">
		<xs:annotation>
			<xs:documentation>
				notification about a topic
			</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:sequence>
				<xs:element name="notification" type="not:notificationType" />
			</xs:sequence>
		</xs:complexType>
	</xs:element>

	<xs:element name="notificationResponse">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="notificationResponse" type="not:notificationResponseType" />
			</xs:sequence>
		</xs:complexType>
	</xs:element>

	<!--
		types used for services
		________________________________________________
	-->
	<xs:complexType name="ServiceConstraintType">
		<xs:annotation>
			<xs:documentation>
				Type used to specify constraints for a requested
				service.
			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="ServiceID" type="nsp:ServiceIdentifierType">
				<xs:annotation>
					<xs:documentation>
						Identifier of a service, needs to be unique only
						within the same reservation.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TypeOfReservation" type="nsp:ReservationType">
				<xs:annotation>
					<xs:documentation>
						The allowed values are: fixed, deferrable,
						malleable
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:choice>
				<xs:annotation>
					<xs:documentation>
						Depending on value of TypeOfReservation.
					</xs:documentation>
				</xs:annotation>
				<xs:element name="FixedReservationConstraints" type="nsp:FixedReservationConstraintType" />
				<xs:element name="DeferrableReservationConstraints"
					type="nsp:DeferrableReservationConstraintType" />
				<xs:element name="MalleableReservationConstraints" type="nsp:MalleableReservationConstraintType" />
			</xs:choice>
			<xs:element name="AutomaticActivation" type="xs:boolean">
				<xs:annotation>
					<xs:documentation>
						Indicates if the Service will be set up
						automatically at start time (true) or not
						(false).
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Connections" type="nsp:ConnectionConstraintType"
				maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>
						Requested connections and their constraints.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="ServiceStatusType">
		<xs:annotation>
			<xs:documentation>
				Stores status information for a service
			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="ServiceID" type="nsp:ServiceIdentifierType" />
			<xs:element name="Status" type="nsp:StatusType" />
			<xs:element name="DomainStatus" type="nsp:DomainStatusType"
				minOccurs="0" maxOccurs="unbounded" />
			<xs:element name="Connections" type="nsp:ConnectionStatusType"
				maxOccurs="unbounded" />
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="DomainStatusType">
		<xs:annotation>
			<xs:documentation>
				Tuple of domain ID and StatusType
			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Domain" type="nspc:DomainIdentifierType" />
			<xs:element name="Status" type="nsp:StatusType" />
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="FixedReservationConstraintType">
		<xs:annotation>
			<xs:documentation>
				Constraints for fixed reservations
			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="StartTime" type="xs:dateTime">
				<xs:annotation>
					<xs:documentation>
						Indicates the time when the service should start
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Duration" type="xs:int">
				<xs:annotation>
					<xs:documentation>
						Indicates the duration of the service in seconds
					</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="DeferrableReservationConstraintType">
		<xs:annotation>
			<xs:documentation>
				Constraints for deferrable reservations
			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="StartTime" type="xs:dateTime">
				<xs:annotation>
					<xs:documentation>
						The earliest point in time when the connection
						would be useful
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Duration" type="xs:int">
				<xs:annotation>
					<xs:documentation>
						Indicates the duration of the service in seconds
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Deadline" type="xs:dateTime">
				<xs:annotation>
					<xs:documentation>
						The latest point in time when the service will
						be
						useful
					</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="MalleableReservationConstraintType">
		<xs:annotation>
			<xs:documentation>
				Constraints for malleable reservations
			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="StartTime" type="xs:dateTime">
				<xs:annotation>
					<xs:documentation>
						The earliest point in time when the connection
						would be useful
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Deadline" type="xs:dateTime">
				<xs:annotation>
					<xs:documentation>
						The latest point in time when the service will
						be
						useful
					</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<!--Faults _____________________-->
	<xs:element name="pathNotFoundFault">
		<xs:annotation>
			<xs:documentation></xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:complexContent>
				<xs:extension base="wsbf:BaseFaultType" />
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:element name="EndpointNotFoundFault">
		<xs:annotation>
			<xs:documentation>
				Returned in case a given endpoint cannot be
				located.
			</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:complexContent>
				<xs:extension base="nsp:ReservationFault" />
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:element name="InvalidServiceIDFault">
		<xs:annotation>
			<xs:documentation>
				Returned in case a given service ID is not known.
			</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:complexContent>
				<xs:extension base="nsp:ReservationFault" />
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:element name="InvalidReservationIDFault">
		<xs:annotation>
			<xs:documentation>
				Returned in case a given reservation ID is not
				valid.
			</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:complexContent>
				<xs:extension base="nsp:ReservationFault" />
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:element name="ReservationIDNotFoundFault">
		<xs:annotation>
			<xs:documentation>
				Returned in case a given reservation ID is not
				known.
			</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:complexContent>
				<xs:extension base="nsp:ReservationFault" />
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:element name="TimeoutFault">
		<xs:annotation>
			<xs:documentation>
				Returned in case a request sent to an underlying
				NRPS times out.
			</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:complexContent>
				<xs:extension base="nsp:ReservationFault" />
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="ReservationFault">
		<xs:complexContent>
			<xs:extension base="wsbf:BaseFaultType" />
		</xs:complexContent>
	</xs:complexType>
</xs:schema>
