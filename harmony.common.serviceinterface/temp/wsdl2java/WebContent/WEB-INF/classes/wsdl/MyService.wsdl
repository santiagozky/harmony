<?xml version="1.0" encoding="UTF-8"?>
<definitions
    targetNamespace="http://ist_phosphorus.eu/nsp/webservice/topology"
    xmlns="http://schemas.xmlsoap.org/wsdl/"
    xmlns:ns="http://ist_phosphorus.eu/nsp/webservice/topology"
    xmlns:ns1="http://ist_phosphorus.eu/NSPCommon"
    xmlns:ns2="http://schemas.xmlsoap.org/soap/encoding/"
    xmlns:ns3="http://ist_phosphorus.eu/nsp"
    xmlns:ns4="http://docs.oasis-open.org/wsrf/bf-2"
    xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/"
    xmlns:topology="http://ist_phosphorus.eu/nsp/webservice/topology"
    xmlns:wsa="http://www.w3.org/2005/08/addressing" xmlns:xs="http://www.w3.org/2001/XMLSchema">
    <types>
        <xs:schema>
            <xs:import namespace="http://ist_phosphorus.eu/nsp/webservice/topology"/>
        </xs:schema>
        <xs:schema attributeFormDefault="unqualified"
            elementFormDefault="qualified"
            targetNamespace="http://ist_phosphorus.eu/nsp/webservice/topology"
            xmlns:nspc="http://ist_phosphorus.eu/nsp"
            xmlns:wsbf="http://docs.oasis-open.org/wsrf/bf-2"
            xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:y="http://ist_phosphorus.eu/nsp/webservice/topology">
            <xs:import namespace="http://ist_phosphorus.eu/nsp"/>
            <xs:import namespace="http://docs.oasis-open.org/wsrf/bf-2"/>
            <xs:complexType name="LinkIdentifierType">
                <xs:sequence>
                    <xs:element name="SourceEndpoint" type="nspc:EndpointIdentifierType">
                        <xs:annotation>
                            <xs:documentation>
						Source end point of the link
					</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="DestinationEndpoint" type="nspc:EndpointIdentifierType">
                        <xs:annotation>
                            <xs:documentation>
						Destination end point of the link
					</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="Link">
                <xs:complexContent>
                    <xs:extension base="y:LinkIdentifierType">
                        <xs:sequence>
                            <xs:element minOccurs="0" name="Name" type="xs:string">
                                <xs:annotation>
                                    <xs:documentation>
						Name of the link
					</xs:documentation>
                                </xs:annotation>
                            </xs:element>
                            <xs:element minOccurs="0" name="Description" type="xs:string">
                                <xs:annotation>
                                    <xs:documentation>
						Description of the link
					</xs:documentation>
                                </xs:annotation>
                            </xs:element>
                            <xs:element minOccurs="0" name="Delay" type="xs:int">
                                <xs:annotation>
                                    <xs:documentation>
                                The delay of the link in ms.
                            </xs:documentation>
                                </xs:annotation>
                            </xs:element>
                            <xs:element minOccurs="0" name="Costs" type="xs:int">
                                <xs:annotation>
                                    <xs:documentation>
                                An abstract metric for the link costs.
                            </xs:documentation>
                                </xs:annotation>
                            </xs:element>
                        </xs:sequence>
                    </xs:extension>
                </xs:complexContent>
            </xs:complexType>
            <xs:complexType name="AdditionalData">
                <xs:annotation>
                    <xs:documentation>Port itional Data</xs:documentation>
                </xs:annotation>
                <xs:sequence>
                    <xs:element name="Parameter" type="xs:string">
                        <xs:annotation>
                            <xs:documentation>VLAN, Lambda,</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element minOccurs="0" name="AssociatedPort" type="nspc:EndpointType">
                        <xs:annotation>
                            <xs:documentation>
						Associated port in case there is pre
						configuration for this parameter. For instance,
						lambda Y is mapped to port X because it has been
						pre configured in this way.
					</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                </xs:sequence>
            </xs:complexType>
            <xs:element name="addOrEditDomain">
                <xs:annotation>
                    <xs:documentation>Adds or edits a domain</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="addOrEditDomain" type="y:AddOrEditDomainType"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="addOrEditDomainResponse">
                <xs:annotation>
                    <xs:documentation>
				Answers an AddOrEditDomain message
			</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="addOrEditDomainResponse" type="y:AddOrEditDomainResponseType"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="addDomain">
                <xs:annotation>
                    <xs:documentation>Adds a domain</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="addDomain" type="y:AddDomainType"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="addDomainResponse">
                <xs:annotation>
                    <xs:documentation>
				Answers an Add Domain message
			</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="addDomainResponse" type="y:AddDomainResponseType"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="deleteDomain">
                <xs:annotation>
                    <xs:documentation>Deletes a domain</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="deleteDomain" type="y:DeleteDomainType"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="deleteDomainResponse">
                <xs:annotation>
                    <xs:documentation>
				Answers a Delete Domain message
			</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="deleteDomainResponse" type="y:DeleteDomainResponseType"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="editDomain">
                <xs:annotation>
                    <xs:documentation>
				Edits a domain name or location
			</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="editDomain" type="y:EditDomainType"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="editDomainResponse">
                <xs:annotation>
                    <xs:documentation>
				Answers an Edit Domain message
			</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="editDomainResponse" type="y:EditDomainResponseType"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="getDomains">
                <xs:annotation>
                    <xs:documentation>
				Retrieves the name of all domains controlled by the NSP
			</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="getDomains" type="y:GetDomainsType"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="getDomainsResponse">
                <xs:annotation>
                    <xs:documentation>
				Answers a getDomains message
			</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="getDomainsResponse" type="y:GetDomainsResponseType"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="addEndpoint">
                <xs:annotation>
                    <xs:documentation>
				Adds end points to a domain
			</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="addEndpoint" type="y:AddEndpointType"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="addEndpointResponse">
                <xs:annotation>
                    <xs:documentation>
				Answers an addEndpoint message
			</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="addEndpointResponse" type="y:AddEndpointResponseType"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="deleteEndpoint">
                <xs:annotation>
                    <xs:documentation>
				Deletes end points of a domain
			</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="deleteEndpoint" type="y:DeleteEndpointType"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="deleteEndpointResponse">
                <xs:annotation>
                    <xs:documentation>
				Answers an DeleteEndpointReq message
			</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="deleteEndpointResponse" type="y:DeleteEndpointResponseType"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="editEndpoint">
                <xs:annotation>
                    <xs:documentation>
				Edits end points of a domain
			</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="editEndpoint" type="y:EditEndpointType"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="editEndpointResponse">
                <xs:annotation>
                    <xs:documentation>
				Answers an EditEndpointReq message
			</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="editEndpointResponse" type="y:EditEndpointResponseType"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="getEndpoints">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="getEndpoints" type="y:GetEndpointsType"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="getEndpointsResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="getEndpointsResponse" type="y:GetEndpointsResponseType"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="addLink">
                <xs:annotation>
                    <xs:documentation>Adds a Link to a Domain</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="addLink" type="y:AddLinkType"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="addLinkResponse">
                <xs:annotation>
                    <xs:documentation>
				Answers an Add link message
			</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="addLinkResponse" type="y:AddLinkResponseType"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="deleteLink">
                <xs:annotation>
                    <xs:documentation>
				Deletes a Link of a Domain
			</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="deleteLink" type="y:DeleteLinkType"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="deleteLinkResponse">
                <xs:annotation>
                    <xs:documentation>
				Answers an delete link message
			</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="deleteLinkResponse" type="y:DeleteLinkResponseType"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="editLink">
                <xs:annotation>
                    <xs:documentation>
				Modifies some parameter of a Link
			</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="editLink" type="y:EditLinkType"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="editLinkResponse">
                <xs:annotation>
                    <xs:documentation>
				Answers an Edit Link message
			</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="editLinkResponse" type="y:EditLinkResponseType"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="getLinks">
                <xs:annotation>
                    <xs:documentation>
				Retrieves all the links of a domain
			</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="getLinks" type="y:GetLinksType"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="getLinksResponse">
                <xs:annotation>
                    <xs:documentation>
				Answers an getLinks message
			</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="getLinksResponse" type="y:GetLinksResponseType"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:complexType name="AddOrEditDomainType">
                <xs:sequence>
                    <xs:element name="Domain" type="nspc:DomainInformationType"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="AddOrEditDomainResponseType">
                <xs:sequence>
                    <xs:element name="Success" type="xs:boolean">
                        <xs:annotation>
                            <xs:documentation>
						Indicates if the addOrEditDomain request has been
						successful (true) or not (false)
					</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="AddDomainType">
                <xs:sequence>
                    <xs:element name="Domain" type="nspc:DomainInformationType"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="AddDomainResponseType">
                <xs:sequence>
                    <xs:element name="Success" type="xs:boolean">
                        <xs:annotation>
                            <xs:documentation>
						Indicates if the add domain request has been
						successful (true) or not (false)
					</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="DeleteDomainType">
                <xs:sequence>
                    <xs:element name="DomainId" type="nspc:DomainIdentifierType">
                        <xs:annotation>
                            <xs:documentation>
						Id of the domain that is to be deleted
					</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="DeleteDomainResponseType">
                <xs:sequence>
                    <xs:element name="Success" type="xs:boolean">
                        <xs:annotation>
                            <xs:documentation>
						Indicates if the delete domain request has been
						successful (True) or not (False)
					</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="EditDomainType">
                <xs:sequence>
                    <xs:element minOccurs="0" name="Domain" type="nspc:DomainInformationType">
                        <xs:annotation>
                            <xs:documentation>
						New name of the domain in case we want to change
						the name of the domain.
					</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="EditDomainResponseType">
                <xs:sequence>
                    <xs:element name="Success" type="xs:boolean">
                        <xs:annotation>
                            <xs:documentation>
						Indicates if the Edit Domain request has been
						successful (True) or not (False)
					</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="GetDomainsType">
                <xs:sequence/>
            </xs:complexType>
            <xs:complexType name="GetDomainsResponseType">
                <xs:sequence>
                    <xs:element maxOccurs="unbounded" minOccurs="0"
                        name="Domains" type="nspc:DomainInformationType">
                        <xs:annotation>
                            <xs:documentation>
						List of all domains
					</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="AddEndpointType">
                <xs:sequence>
                    <xs:element name="Endpoint" type="nspc:EndpointType">
                        <xs:annotation>
                            <xs:documentation>
						Endpoint to be added
					</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="AddEndpointResponseType">
                <xs:sequence>
                    <xs:element name="Success" type="xs:boolean"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="DeleteEndpointType">
                <xs:sequence>
                    <xs:element name="Endpoint" type="nspc:EndpointIdentifierType">
                        <xs:annotation>
                            <xs:documentation>
						Endpoint to be removed
					</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="DeleteEndpointResponseType">
                <xs:sequence>
                    <xs:element name="Success" type="xs:boolean">
                        <xs:annotation>
                            <xs:documentation>
						Indicates if the request has been successful
						(True) or not (False)
					</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="EditEndpointType">
                <xs:sequence>
                    <xs:element name="Endpoint" type="nspc:EndpointType">
                        <xs:annotation>
                            <xs:documentation>
						Endpoint to be modified
					</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="EditEndpointResponseType">
                <xs:sequence>
                    <xs:element name="Success" type="xs:boolean">
                        <xs:annotation>
                            <xs:documentation>
						Indicates if the request has been successful
						(True) or not (False)
					</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="GetEndpointsType">
                <xs:sequence>
                    <xs:element name="Domain" type="xs:string">
                        <xs:annotation>
                            <xs:documentation>
						Contains the name of th edomain we want to query
					</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="GetEndpointsResponseType">
                <xs:sequence>
                    <xs:element maxOccurs="unbounded" minOccurs="0"
                        name="Endpoints" type="nspc:EndpointType">
                        <xs:annotation>
                            <xs:documentation>
						List of the names of all domains
					</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="AddLinkType">
                <xs:sequence>
                    <xs:element name="LinkData" type="y:Link"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="AddLinkResponseType">
                <xs:sequence>
                    <xs:element name="Success" type="xs:boolean">
                        <xs:annotation>
                            <xs:documentation>
						Unique identifier of the link. It is
						automatically generated by the NSP.
					</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="DeleteLinkType">
                <xs:sequence>
                    <xs:element name="LinkId" type="y:LinkIdentifierType">
                        <xs:annotation>
                            <xs:documentation>
						Identifier of the link we want to delete
					</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="DeleteLinkResponseType">
                <xs:sequence>
                    <xs:element name="Success" type="xs:boolean">
                        <xs:annotation>
                            <xs:documentation>
						Indicates if the Delete Link request has been
						successful (True) or not (False)
					</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="EditLinkType">
                <xs:sequence>
                    <xs:element name="Link" type="y:Link">
                        <xs:annotation>
                            <xs:documentation>
						Identifier of the link we want to modify
					</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="EditLinkResponseType">
                <xs:sequence>
                    <xs:element name="Result" type="xs:boolean">
                        <xs:annotation>
                            <xs:documentation>
						Indicates if the Edit Link request has been
						successful (True) or not (False)
					</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="GetLinksType">
                <xs:sequence>
                    <xs:element name="DomainId" type="nspc:DomainIdentifierType">
                        <xs:annotation>
                            <xs:documentation>
						Contains the ID of the domain we want to query
					</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="GetLinksResponseType">
                <xs:sequence>
                    <xs:element maxOccurs="unbounded" minOccurs="0"
                        name="Link" type="y:Link">
                        <xs:annotation>
                            <xs:documentation>
						List of the Links of this domain
					</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                </xs:sequence>
            </xs:complexType>
            <xs:element name="DomainNotFoundFault">
                <xs:annotation>
                    <xs:documentation>
				Returned in case that the domain already exists
			</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:complexContent>
                        <xs:extension base="y:TopologyFault"/>
                    </xs:complexContent>
                </xs:complexType>
            </xs:element>
            <xs:element name="DomainAlreadyExistsFault">
                <xs:annotation>
                    <xs:documentation>
				Returned in case that the domain already exists
			</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:complexContent>
                        <xs:extension base="y:TopologyFault"/>
                    </xs:complexContent>
                </xs:complexType>
            </xs:element>
            <xs:element name="EndpointAlreadyExistsFault">
                <xs:annotation>
                    <xs:documentation>
				Returned in case that the endpoint already exists
			</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:complexContent>
                        <xs:extension base="y:TopologyFault"/>
                    </xs:complexContent>
                </xs:complexType>
            </xs:element>
            <xs:element name="LinkAlreadyExistsFault">
                <xs:annotation>
                    <xs:documentation>
				Returned in case that the link already exists
			</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:complexContent>
                        <xs:extension base="y:TopologyFault"/>
                    </xs:complexContent>
                </xs:complexType>
            </xs:element>
            <xs:complexType name="TopologyFault">
                <xs:complexContent>
                    <xs:extension base="wsbf:BaseFaultType"/>
                </xs:complexContent>
            </xs:complexType>
        </xs:schema>
        <xs:schema attributeFormDefault="unqualified"
            elementFormDefault="qualified"
            jaxb:extensionBindingPrefixes="xjc" jaxb:version="2.0"
            targetNamespace="http://ist_phosphorus.eu/nsp"
            xmlns:jaxb="http://java.sun.com/xml/ns/jaxb"
            xmlns:ns1="http://ist_phosphorus.eu/nsp"
            xmlns:wsa="http://www.w3.org/2005/08/addressing"
            xmlns:wsbf="http://docs.oasis-open.org/wsrf/bf-2"
            xmlns:xjc="http://java.sun.com/xml/ns/jaxb/xjc" xmlns:xs="http://www.w3.org/2001/XMLSchema">
            <xs:import namespace="http://www.w3.org/2005/08/addressing"/>
            <xs:import namespace="http://docs.oasis-open.org/wsrf/bf-2"/>
            <xs:annotation>
                <xs:appinfo>
                    <jaxb:globalBindings generateIsSetMethod="true">
                        <xjc:serializable/>
                    </jaxb:globalBindings>
                </xs:appinfo>
            </xs:annotation>
            <xs:simpleType name="TNAType">
                <xs:annotation>
                    <xs:documentation>
                                Type used to TNA addresses
                        </xs:documentation>
                </xs:annotation>
                <xs:restriction base="xs:string">
                    <xs:pattern value="[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}"/>
                </xs:restriction>
            </xs:simpleType>
            <xs:simpleType name="TNAPrefixType">
                <xs:restriction base="xs:string">
                    <xs:pattern value="[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}/[0-9]{1,2}"/>
                </xs:restriction>
            </xs:simpleType>
            <xs:simpleType name="EndpointIdentifierType">
                <xs:annotation>
                    <xs:documentation>
				Type used to identify endpoints
			</xs:documentation>
                </xs:annotation>
                <xs:restriction base="ns1:TNAType"/>
            </xs:simpleType>
            <xs:simpleType name="EndpointInterfaceType">
                <xs:annotation>
                    <xs:documentation>
					Inter-domain, local end point
				</xs:documentation>
                </xs:annotation>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="user"/>
                    <xs:enumeration value="border"/>
                </xs:restriction>
            </xs:simpleType>
            <xs:complexType name="EndpointTechnologyType">
                <xs:sequence>
                    <xs:element maxOccurs="unbounded"
                        name="EndpointSupportedAdaptation" type="xs:string"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="EndpointType">
                <xs:annotation>
                    <xs:documentation>
				Information about an endpoint
			</xs:documentation>
                </xs:annotation>
                <xs:sequence>
                    <xs:element name="EndpointId" type="ns1:EndpointIdentifierType">
                        <xs:annotation>
                            <xs:documentation>TNA</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element minOccurs="0" name="Name" type="xs:string">
                        <xs:annotation>
                            <xs:documentation>Endpoint Name</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element minOccurs="0" name="Description" type="xs:string">
                        <xs:annotation>
                            <xs:documentation>
						Description provided by the user that creates
						the endpoint object, e.g. port5 in switch
						OME-NY01 allocated for apllication Z.
					</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element minOccurs="0" name="Interface" type="ns1:EndpointInterfaceType">
                        <xs:annotation>
                            <xs:documentation>Local or inter-domain endpoint?</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element minOccurs="0" name="DomainId" type="ns1:DomainIdentifierType">
                        <xs:annotation>
                            <xs:documentation>ID of the domain this endpoint is located in</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element minOccurs="0" name="Bandwidth" type="xs:int">
                        <xs:annotation>
                            <xs:documentation>
						Bandwidth of the port in Mbps
					</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element minOccurs="0" name="Technology" type="ns1:EndpointTechnologyType"/>
                </xs:sequence>
            </xs:complexType>
            <xs:simpleType name="DomainIdentifierType">
                <xs:annotation>
                    <xs:documentation>
				Type used to identify the domain
			</xs:documentation>
                </xs:annotation>
                <xs:restriction base="xs:string"/>
            </xs:simpleType>
            <xs:simpleType name="DomainRelationshipType">
                <xs:restriction base="xs:string">
                    <xs:enumeration value="superdomain"/>
                    <xs:enumeration value="peer"/>
                    <xs:enumeration value="subdomain"/>
                </xs:restriction>
            </xs:simpleType>
            <xs:complexType name="DomainInformationType">
                <xs:sequence>
                    <xs:element name="DomainId" type="ns1:DomainIdentifierType">
                        <xs:annotation>
                            <xs:documentation>
                        Unique identifier for the domain
                    </xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element minOccurs="0" name="Relationship" type="ns1:DomainRelationshipType"/>
                    <xs:element minOccurs="0" name="SequenceNumber" type="xs:int">
                        <xs:annotation>
                            <xs:documentation>
						Increased by the origin domain, allows others to check if information has changed and is more current than previously stored information.
					</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element minOccurs="0" name="Description" type="xs:string">
                        <xs:annotation>
                            <xs:documentation>
						Short description of the domain
					</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="ReservationEPR" type="xs:anyURI">
                        <xs:annotation>
                            <xs:documentation>
						Endpoint reference of the NRPS reservation adapter
					</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element minOccurs="0" name="TopologyEPR" type="xs:anyURI">
                        <xs:annotation>
                            <xs:documentation>
                        Endpoint reference of the NRPS topology adapter
                    </xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element minOccurs="0" name="NotificationEPR" type="xs:anyURI">
                        <xs:annotation>
                            <xs:documentation>
                        Endpoint reference of the NRPS notification producer
                    </xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element maxOccurs="unbounded" minOccurs="0"
                        name="TNAPrefix" type="ns1:TNAPrefixType">
                        <xs:annotation>
                            <xs:documentation>
						List of TNA prefixes the domain is responsible
						for
					</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element maxOccurs="unbounded" minOccurs="0"
                        name="InterdomainLink" type="ns1:InterdomainLinkType"/>
                    <xs:element minOccurs="0" name="avgDelay" type="xs:int">
                        <xs:annotation>
                            <xs:documentation>
						Average delay for paths in this domain;
						path computer optimization.
					</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element minOccurs="0" name="maxBW" type="xs:int">
                        <xs:annotation>
                            <xs:documentation>
						Maximum bandwidth for paths in this domain;
						path computer optimization.
					</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element maxOccurs="unbounded" minOccurs="0"
                        name="Feature" type="xs:string"/>
                    <xs:element minOccurs="0" name="Technology" type="ns1:DomainTechnologyType"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="DomainTechnologyType">
                <xs:sequence>
                    <xs:element maxOccurs="unbounded" minOccurs="0"
                        name="DomainSupportedAdaptation" type="xs:string"/>
                    <xs:element maxOccurs="unbounded" minOccurs="0"
                        name="DomainSupportedBandwidth" type="xs:long"/>
                    <xs:element maxOccurs="unbounded"
                        name="DomainSupportedSwitchMatrix" type="xs:string"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="InterdomainLinkType">
                <xs:sequence>
                    <xs:element name="LinkID" type="xs:string"/>
                    <xs:element name="SourceEndpoint" type="ns1:EndpointType"/>
                    <xs:element name="DestinationDomain" type="ns1:DomainIdentifierType"/>
                    <xs:element minOccurs="0" name="costs" type="xs:int"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="Tuple">
                <xs:sequence>
                    <xs:element name="Key" type="xs:string"/>
                    <xs:element name="Value" type="xs:string"/>
                </xs:sequence>
            </xs:complexType>
            <xs:element name="UnexpectedFault">
                <xs:annotation>
                    <xs:documentation>
                Returned in case that internally an error occured
            </xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:complexContent mixed="false">
                        <xs:extension base="wsbf:BaseFaultType"/>
                    </xs:complexContent>
                </xs:complexType>
            </xs:element>
            <xs:element name="InvalidRequestFault">
                <xs:annotation>
                    <xs:documentation>
                Returned in case that the request doesn't match the specification
            </xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:complexContent mixed="false">
                        <xs:extension base="wsbf:BaseFaultType"/>
                    </xs:complexContent>
                </xs:complexType>
            </xs:element>
            <xs:element name="OperationNotAllowedFault">
                <xs:annotation>
                    <xs:documentation>
                Returned in case that the operation is not allowed with the given user credentials
            </xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:complexContent mixed="false">
                        <xs:extension base="wsbf:BaseFaultType"/>
                    </xs:complexContent>
                </xs:complexType>
            </xs:element>
            <xs:element name="OperationNotSupportedFault">
                <xs:annotation>
                    <xs:documentation>
                Returned in case an operation is not supported by the system
            </xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:complexContent mixed="false">
                        <xs:extension base="wsbf:BaseFaultType"/>
                    </xs:complexContent>
                </xs:complexType>
            </xs:element>
        </xs:schema>
        <xs:schema attributeFormDefault="unqualified"
            elementFormDefault="qualified"
            targetNamespace="http://www.w3.org/2005/08/addressing"
            xmlns:tns="http://www.w3.org/2005/08/addressing" xmlns:xs="http://www.w3.org/2001/XMLSchema">
            <xs:element name="EndpointReference" type="tns:EndpointReferenceType"/>
            <xs:complexType mixed="false" name="EndpointReferenceType">
                <xs:sequence>
                    <xs:element name="Address" type="tns:AttributedURIType"/>
                    <xs:element minOccurs="0" name="ReferenceParameters" type="tns:ReferenceParametersType"/>
                    <xs:element minOccurs="0" ref="tns:Metadata"/>
                    <xs:any maxOccurs="unbounded" minOccurs="0"
                        namespace="##other" processContents="lax"/>
                </xs:sequence>
                <xs:anyAttribute namespace="##other" processContents="lax"/>
            </xs:complexType>
            <xs:complexType mixed="false" name="ReferenceParametersType">
                <xs:sequence>
                    <xs:any maxOccurs="unbounded" minOccurs="0"
                        namespace="##any" processContents="lax"/>
                </xs:sequence>
                <xs:anyAttribute namespace="##other" processContents="lax"/>
            </xs:complexType>
            <xs:element name="Metadata" type="tns:MetadataType"/>
            <xs:complexType mixed="false" name="MetadataType">
                <xs:sequence>
                    <xs:any maxOccurs="unbounded" minOccurs="0"
                        namespace="##any" processContents="lax"/>
                </xs:sequence>
                <xs:anyAttribute namespace="##other" processContents="lax"/>
            </xs:complexType>
            <xs:element name="MessageID" type="tns:AttributedURIType"/>
            <xs:element name="RelatesTo" type="tns:RelatesToType"/>
            <xs:complexType mixed="false" name="RelatesToType">
                <xs:simpleContent>
                    <xs:extension base="xs:anyURI">
                        <xs:attribute
                            default="http://www.w3.org/2005/08/addressing/reply"
                            name="RelationshipType"
                            type="tns:RelationshipTypeOpenEnum" use="optional"/>
                        <xs:anyAttribute namespace="##other" processContents="lax"/>
                    </xs:extension>
                </xs:simpleContent>
            </xs:complexType>
            <xs:simpleType name="RelationshipTypeOpenEnum">
                <xs:union memberTypes="tns:RelationshipType xs:anyURI"/>
            </xs:simpleType>
            <xs:simpleType name="RelationshipType">
                <xs:restriction base="xs:anyURI">
                    <xs:enumeration value="http://www.w3.org/2005/08/addressing/reply"/>
                </xs:restriction>
            </xs:simpleType>
            <xs:element name="ReplyTo" type="tns:EndpointReferenceType"/>
            <xs:element name="From" type="tns:EndpointReferenceType"/>
            <xs:element name="FaultTo" type="tns:EndpointReferenceType"/>
            <xs:element name="To" type="tns:AttributedURIType"/>
            <xs:element name="Action" type="tns:AttributedURIType"/>
            <xs:complexType mixed="false" name="AttributedURIType">
                <xs:simpleContent>
                    <xs:extension base="xs:anyURI">
                        <xs:anyAttribute namespace="##other" processContents="lax"/>
                    </xs:extension>
                </xs:simpleContent>
            </xs:complexType>
            <xs:attribute name="IsReferenceParameter" type="xs:boolean"/>
            <xs:simpleType name="FaultCodesOpenEnumType">
                <xs:union memberTypes="tns:FaultCodesType xs:QName"/>
            </xs:simpleType>
            <xs:simpleType name="FaultCodesType">
                <xs:restriction base="xs:QName">
                    <xs:enumeration value="tns:InvalidAddressingHeader"/>
                    <xs:enumeration value="tns:InvalidAddress"/>
                    <xs:enumeration value="tns:InvalidEPR"/>
                    <xs:enumeration value="tns:InvalidCardinality"/>
                    <xs:enumeration value="tns:MissingAddressInEPR"/>
                    <xs:enumeration value="tns:DuplicateMessageID"/>
                    <xs:enumeration value="tns:ActionMismatch"/>
                    <xs:enumeration value="tns:MessageAddressingHeaderRequired"/>
                    <xs:enumeration value="tns:DestinationUnreachable"/>
                    <xs:enumeration value="tns:ActionNotSupported"/>
                    <xs:enumeration value="tns:EndpointUnavailable"/>
                </xs:restriction>
            </xs:simpleType>
            <xs:element name="RetryAfter" type="tns:AttributedUnsignedLongType"/>
            <xs:complexType mixed="false" name="AttributedUnsignedLongType">
                <xs:simpleContent>
                    <xs:extension base="xs:unsignedLong">
                        <xs:anyAttribute namespace="##other" processContents="lax"/>
                    </xs:extension>
                </xs:simpleContent>
            </xs:complexType>
            <xs:element name="ProblemHeaderQName" type="tns:AttributedQNameType"/>
            <xs:complexType mixed="false" name="AttributedQNameType">
                <xs:simpleContent>
                    <xs:extension base="xs:QName">
                        <xs:anyAttribute namespace="##other" processContents="lax"/>
                    </xs:extension>
                </xs:simpleContent>
            </xs:complexType>
            <xs:element name="ProblemHeader" type="tns:AttributedAnyType"/>
            <xs:complexType mixed="false" name="AttributedAnyType">
                <xs:sequence>
                    <xs:any maxOccurs="1" minOccurs="1"
                        namespace="##any" processContents="lax"/>
                </xs:sequence>
                <xs:anyAttribute namespace="##other" processContents="lax"/>
            </xs:complexType>
            <xs:element name="ProblemIRI" type="tns:AttributedURIType"/>
            <xs:element name="ProblemAction" type="tns:ProblemActionType"/>
            <xs:complexType mixed="false" name="ProblemActionType">
                <xs:sequence>
                    <xs:element minOccurs="0" ref="tns:Action"/>
                    <xs:element minOccurs="0" name="SoapAction" type="xs:anyURI"/>
                </xs:sequence>
                <xs:anyAttribute namespace="##other" processContents="lax"/>
            </xs:complexType>
        </xs:schema>
        <xsd:schema attributeFormDefault="unqualified"
            elementFormDefault="qualified"
            targetNamespace="http://docs.oasis-open.org/wsrf/bf-2"
            xmlns="http://www.w3.org/2001/XMLSchema"
            xmlns:wsa="http://www.w3.org/2005/08/addressing"
            xmlns:wsrf-bf="http://docs.oasis-open.org/wsrf/bf-2"
            xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
            <xsd:import namespace="http://www.w3.org/2005/08/addressing"/>
            <xsd:import namespace="http://www.w3.org/XML/1998/namespace">
                <xsd:annotation>
                    <xsd:documentation>
        Get access to the xml: attribute groups for xml:lang as declared on 'schema'
        and 'documentation' below
      </xsd:documentation>
                </xsd:annotation>
            </xsd:import>
            <xsd:element name="BaseFault" type="wsrf-bf:BaseFaultType"/>
            <xsd:complexType name="BaseFaultType">
                <xsd:sequence>
                    <xsd:any maxOccurs="unbounded" minOccurs="0"
                        namespace="##other" processContents="lax"/>
                    <xsd:element maxOccurs="1" minOccurs="1"
                        name="Timestamp" type="xsd:dateTime"/>
                    <xsd:element maxOccurs="1" minOccurs="0"
                        name="Originator" type="wsa:EndpointReferenceType"/>
                    <xsd:element maxOccurs="1" minOccurs="0" name="ErrorCode">
                        <xsd:complexType>
                            <xsd:complexContent mixed="true">
                                <xsd:extension base="xsd:anyType">
                                    <xsd:attribute name="dialect"
                                    type="xsd:anyURI" use="required"/>
                                </xsd:extension>
                            </xsd:complexContent>
                        </xsd:complexType>
                    </xsd:element>
                    <xsd:element maxOccurs="unbounded" minOccurs="0" name="Description">
                        <xsd:complexType>
                            <xsd:simpleContent>
                                <xsd:extension base="xsd:string">
                                    <xsd:attribute ref="xml:lang" use="optional"/>
                                </xsd:extension>
                            </xsd:simpleContent>
                        </xsd:complexType>
                    </xsd:element>
                    <xsd:element maxOccurs="1" minOccurs="0" name="FaultCause">
                        <xsd:complexType>
                            <xsd:sequence>
                                <xsd:any maxOccurs="1" minOccurs="1"
                                    namespace="##other" processContents="lax"/>
                            </xsd:sequence>
                        </xsd:complexType>
                    </xsd:element>
                </xsd:sequence>
                <xsd:anyAttribute namespace="##other" processContents="lax"/>
            </xsd:complexType>
        </xsd:schema>
        <xs:schema
            targetNamespace="http://www.w3.org/XML/1998/namespace"
            xml:lang="en" xmlns:xs="http://www.w3.org/2001/XMLSchema">
            <xs:attribute name="lang" type="xs:language"/>
            <xs:attribute default="preserve" name="space">
                <xs:simpleType>
                    <xs:restriction base="xs:NCName">
                        <xs:enumeration value="default"/>
                        <xs:enumeration value="preserve"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:attribute>
            <xs:attribute name="base" type="xs:anyURI"/>
            <xs:attributeGroup name="specialAttrs">
                <xs:attribute ref="xml:base"/>
                <xs:attribute ref="xml:lang"/>
                <xs:attribute ref="xml:space"/>
            </xs:attributeGroup>
        </xs:schema>
    </types>
    <message name="addEndpoint">
        <part element="topology:addEndpoint" name="addEndpoint"/>
    </message>
    <message name="addEndpointResponse">
        <part element="topology:addEndpointResponse" name="addEndpointResponse"/>
    </message>
    <message name="addLink">
        <part element="topology:addLink" name="addLink"/>
    </message>
    <message name="UnexpectedFault">
        <part element="ns3:UnexpectedFault" name="UnexpectedFault"/>
    </message>
    <message name="InvalidRequestFault">
        <part element="ns3:InvalidRequestFault" name="InvalidRequestFault"/>
    </message>
    <message name="OperationNotAllowedFault">
        <part element="ns3:OperationNotAllowedFault" name="OperationNotAllowedFault"/>
    </message>
    <message name="OperationNotSupportedFault">
        <part element="ns3:OperationNotSupportedFault" name="OperationNotSupportedFault"/>
    </message>
    <message name="DomainAlreadyExistsFault">
        <part element="topology:DomainAlreadyExistsFault" name="DomainAlreadyExistsFault"/>
    </message>
    <message name="EndpointAlreadyExistsFault">
        <part element="topology:EndpointAlreadyExistsFault" name="EndpointAlreadyExistsFault"/>
    </message>
    <message name="LinkAlreadyExistsFault">
        <part element="topology:LinkAlreadyExistsFault" name="LinkAlreadyExistsFault"/>
    </message>
    <message name="DomainNotFoundFault">
        <part element="topology:DomainNotFoundFault" name="DomainNotFoundFault"/>
    </message>
    <message name="deleteDomainResponse">
        <part element="topology:deleteDomainResponse" name="deleteDomainResponse"/>
    </message>
    <message name="addOrEditDomain">
        <part element="topology:addOrEditDomain" name="addOrEditDomain"/>
    </message>
    <message name="addDomain">
        <part element="topology:addDomain" name="addDomain"/>
    </message>
    <message name="deleteDomain">
        <part element="topology:deleteDomain" name="deleteDomain"/>
    </message>
    <message name="addLinkResponse">
        <part element="topology:addLinkResponse" name="addLinkResponse"/>
    </message>
    <message name="deleteLink">
        <part element="topology:deleteLink" name="deleteLink"/>
    </message>
    <message name="deleteLinkResponse">
        <part element="topology:deleteLinkResponse" name="deleteLinkResponse"/>
    </message>
    <message name="editLink">
        <part element="topology:editLink" name="editLink"/>
    </message>
    <message name="editLinkResponse">
        <part element="topology:editLinkResponse" name="editLinkResponse"/>
    </message>
    <message name="addOrEditDomainResponse">
        <part element="topology:addOrEditDomainResponse" name="addOrEditDomainResponse"/>
    </message>
    <message name="addDomainResponse">
        <part element="topology:addDomainResponse" name="addDomainResponse"/>
    </message>
    <message name="editDomain">
        <part element="topology:editDomain" name="editDomain"/>
    </message>
    <message name="editDomainResponse">
        <part element="topology:editDomainResponse" name="editDomainResponse"/>
    </message>
    <message name="deleteEndpoint">
        <part element="topology:deleteEndpoint" name="deleteEndpoint"/>
    </message>
    <message name="deleteEndpointResponse">
        <part element="topology:deleteEndpointResponse" name="deleteEndpointResponse"/>
    </message>
    <message name="editEndpoint">
        <part element="topology:editEndpoint" name="editEndpoint"/>
    </message>
    <message name="editEndpointResponse">
        <part element="topology:editEndpointResponse" name="editEndpointResponse"/>
    </message>
    <message name="getDomains">
        <part element="topology:getDomains" name="getDomains"/>
    </message>
    <message name="getDomainsResponse">
        <part element="topology:getDomainsResponse" name="getDomainsResponse"/>
    </message>
    <message name="getEndpoints">
        <part element="topology:getEndpoints" name="getEndpoints"/>
    </message>
    <message name="getEndpointsResponse">
        <part element="topology:getEndpointsResponse" name="getEndpointsResponse"/>
    </message>
    <message name="getLinks">
        <part element="topology:getLinks" name="getLinks"/>
    </message>
    <message name="getLinksResponse">
        <part element="topology:getLinksResponse" name="getLinksResponse"/>
    </message>
    <portType name="TopologyIFPortType">
        <operation name="addOrEditDomain">
            <documentation>Adds or edits a domain.</documentation>
            <input message="topology:addOrEditDomain" wsa:Action="http://ist_phosphorus.eu/nsp/webservice/topology/addOrEditDomain"/>
            <output message="topology:addOrEditDomainResponse" wsa:Action="http://ist_phosphorus.eu/nsp/webservice/topology/addOrEditDomainResponse"/>
            <fault message="topology:UnexpectedFault" name="UnexpectedFault"/>
            <fault message="topology:InvalidRequestFault" name="InvalidRequestFault"/>
            <fault message="topology:OperationNotAllowedFault" name="OperationNotAllowedFault"/>
            <fault message="topology:OperationNotSupportedFault" name="OperationNotSupportedFault"/>
        </operation>
        <operation name="addDomain">
            <documentation>Adds the domain to the NSP.</documentation>
            <input message="topology:addDomain" wsa:Action="http://ist_phosphorus.eu/nsp/webservice/topology/addDomain"/>
            <output message="topology:addDomainResponse" wsa:Action="http://ist_phosphorus.eu/nsp/webservice/topology/addDomainResponse"/>
            <fault message="topology:UnexpectedFault" name="UnexpectedFault"/>
            <fault message="topology:InvalidRequestFault" name="InvalidRequestFault"/>
            <fault message="topology:OperationNotAllowedFault" name="OperationNotAllowedFault"/>
            <fault message="topology:DomainAlreadyExistsFault" name="DomainAlreadyExistsFault"/>
            <fault message="topology:OperationNotSupportedFault" name="OperationNotSupportedFault"/>
        </operation>
        <operation name="deleteDomain">
            <documentation>Deletes the domain from the NSP.</documentation>
            <input message="topology:deleteDomain" wsa:Action="http://ist_phosphorus.eu/nsp/webservice/topology/deleteDomain"/>
            <output message="topology:deleteDomainResponse" wsa:Action="http://ist_phosphorus.eu/nsp/webservice/topology/deleteDomainResponse"/>
            <fault message="topology:DomainNotFoundFault" name="DomainNotFoundFault"/>
            <fault message="topology:UnexpectedFault" name="UnexpectedFault"/>
            <fault message="topology:InvalidRequestFault" name="InvalidRequestFault"/>
            <fault message="topology:OperationNotAllowedFault" name="OperationNotAllowedFault"/>
            <fault message="topology:OperationNotSupportedFault" name="OperationNotSupportedFault"/>
        </operation>
        <operation name="editDomain">
            <documentation>Edits the specified domain link available in the NSP.</documentation>
            <input message="topology:editDomain" name="editDomain" wsa:Action="http://ist_phosphorus.eu/nsp/webservice/topology/editDomain"/>
            <output message="topology:editDomainResponse" wsa:Action="http://ist_phosphorus.eu/nsp/webservice/topology/editDomainResponse"/>
            <fault message="topology:DomainNotFoundFault" name="DomainNotFoundFault"/>
            <fault message="topology:UnexpectedFault" name="UnexpectedFault"/>
            <fault message="topology:InvalidRequestFault" name="InvalidRequestFault"/>
            <fault message="topology:OperationNotAllowedFault" name="OperationNotAllowedFault"/>
            <fault message="topology:OperationNotSupportedFault" name="OperationNotSupportedFault"/>
        </operation>
        <operation name="getDomains">
            <documentation>Retrieves all domains added to the NSP.</documentation>
            <input message="topology:getDomains" wsa:Action="http://ist_phosphorus.eu/nsp/webservice/topology/getDomains"/>
            <output message="topology:getDomainsResponse" wsa:Action="http://ist_phosphorus.eu/nsp/webservice/topology/getDomainsResponse"/>
            <fault message="topology:UnexpectedFault" name="UnexpectedFault"/>
            <fault message="topology:InvalidRequestFault" name="InvalidRequestFault"/>
            <fault message="topology:OperationNotAllowedFault" name="OperationNotAllowedFault"/>
            <fault message="topology:OperationNotSupportedFault" name="OperationNotSupportedFault"/>
        </operation>
        <operation name="addEndpoint">
            <documentation>Adds an endpoint to the NSP.</documentation>
            <input message="topology:addEndpoint" wsa:Action="http://ist_phosphorus.eu/nsp/webservice/topology/addEndpoint"/>
            <output message="topology:addEndpointResponse" wsa:Action="http://ist_phosphorus.eu/nsp/webservice/topology/addEndpointResponse"/>
            <fault message="topology:DomainNotFoundFault" name="DomainNotFoundFault"/>
            <fault message="topology:EndpointAlreadyExistsFault" name="EndpointAlreadyExistsFault"/>
            <fault message="topology:UnexpectedFault" name="UnexpectedFault"/>
            <fault message="topology:InvalidRequestFault" name="InvalidRequestFault"/>
            <fault message="topology:OperationNotAllowedFault" name="OperationNotAllowedFault"/>
            <fault message="topology:OperationNotSupportedFault" name="OperationNotSupportedFault"/>
        </operation>
        <operation name="deleteEndpoint">
            <documentation>Deletes an endpoint from the NSP.</documentation>
            <input message="topology:deleteEndpoint" wsa:Action="http://ist_phosphorus.eu/nsp/webservice/topology/deleteEndpoint"/>
            <output message="topology:deleteEndpointResponse" wsa:Action="http://ist_phosphorus.eu/nsp/webservice/topology/deleteEndpointResponse"/>
            <fault message="topology:UnexpectedFault" name="UnexpectedFault"/>
            <fault message="topology:InvalidRequestFault" name="InvalidRequestFault"/>
            <fault message="topology:OperationNotAllowedFault" name="OperationNotAllowedFault"/>
            <fault message="topology:OperationNotSupportedFault" name="OperationNotSupportedFault"/>
        </operation>
        <operation name="editEndpoint">
            <documentation>Edits the specified endpoint link available in the NSP.</documentation>
            <input message="topology:editEndpoint" wsa:Action="http://ist_phosphorus.eu/nsp/webservice/topology/editEndpoint"/>
            <output message="topology:editEndpointResponse" wsa:Action="http://ist_phosphorus.eu/nsp/webservice/topology/editEndpointResponse"/>
            <fault message="topology:UnexpectedFault" name="UnexpectedFault"/>
            <fault message="topology:InvalidRequestFault" name="InvalidRequestFault"/>
            <fault message="topology:OperationNotAllowedFault" name="OperationNotAllowedFault"/>
            <fault message="topology:OperationNotSupportedFault" name="OperationNotSupportedFault"/>
        </operation>
        <operation name="getEndpoints">
            <documentation>Retrieves all endpoints added to the NSP.</documentation>
            <input message="topology:getEndpoints" wsa:Action="http://ist_phosphorus.eu/nsp/webservice/topology/getEndpoints"/>
            <output message="topology:getEndpointsResponse" wsa:Action="http://ist_phosphorus.eu/nsp/webservice/topology/getEndpointsResponse"/>
            <fault message="topology:UnexpectedFault" name="UnexpectedFault"/>
            <fault message="topology:InvalidRequestFault" name="InvalidRequestFault"/>
            <fault message="topology:OperationNotAllowedFault" name="OperationNotAllowedFault"/>
            <fault message="topology:OperationNotSupportedFault" name="OperationNotSupportedFault"/>
        </operation>
        <operation name="addLink">
            <documentation/>
            <input message="topology:addLink" wsa:Action="http://ist_phosphorus.eu/nsp/webservice/topology/addLink"/>
            <output message="topology:addLinkResponse" wsa:Action="http://ist_phosphorus.eu/nsp/webservice/topology/addLinkResponse"/>
            <fault message="topology:UnexpectedFault" name="UnexpectedFault"/>
            <fault message="topology:InvalidRequestFault" name="InvalidRequestFault"/>
            <fault message="topology:OperationNotAllowedFault" name="OperationNotAllowedFault"/>
            <fault message="topology:OperationNotSupportedFault" name="OperationNotSupportedFault"/>
        </operation>
        <operation name="deleteLink">
            <documentation/>
            <input message="topology:deleteLink" wsa:Action="http://ist_phosphorus.eu/nsp/webservice/topology/deleteLink"/>
            <output message="topology:deleteLinkResponse" wsa:Action="http://ist_phosphorus.eu/nsp/webservice/topology/deleteLinkResponse"/>
            <fault message="topology:UnexpectedFault" name="UnexpectedFault"/>
            <fault message="topology:InvalidRequestFault" name="InvalidRequestFault"/>
            <fault message="topology:OperationNotAllowedFault" name="OperationNotAllowedFault"/>
            <fault message="topology:OperationNotSupportedFault" name="OperationNotSupportedFault"/>
        </operation>
        <operation name="editLink">
            <documentation/>
            <input message="topology:editLink" wsa:Action="http://ist_phosphorus.eu/nsp/webservice/topology/editLink"/>
            <output message="topology:editLinkResponse" wsa:Action="http://ist_phosphorus.eu/nsp/webservice/topology/editLinkResponse"/>
            <fault message="topology:UnexpectedFault" name="UnexpectedFault"/>
            <fault message="topology:InvalidRequestFault" name="InvalidRequestFault"/>
            <fault message="topology:OperationNotAllowedFault" name="OperationNotAllowedFault"/>
            <fault message="topology:OperationNotSupportedFault" name="OperationNotSupportedFault"/>
        </operation>
        <operation name="getLinks">
            <documentation/>
            <input message="topology:getLinks" wsa:Action="http://ist_phosphorus.eu/nsp/webservice/topology/getLinks"/>
            <output message="topology:getLinksResponse" wsa:Action="http://ist_phosphorus.eu/nsp/webservice/topology/getLinksResponse"/>
            <fault message="topology:UnexpectedFault" name="UnexpectedFault"/>
            <fault message="topology:InvalidRequestFault" name="InvalidRequestFault"/>
            <fault message="topology:OperationNotAllowedFault" name="OperationNotAllowedFault"/>
            <fault message="topology:OperationNotSupportedFault" name="OperationNotSupportedFault"/>
        </operation>
    </portType>
    <binding name="topologyIFBinding" type="topology:TopologyIFPortType">
        <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
        <operation name="addOrEditDomain">
            <soap:operation
                soapAction="http://ist_phosphorus.eu/nsp/webservice/topology/addOrEditDomain" style="document"/>
            <input>
                <soap:body use="literal"/>
            </input>
            <output>
                <soap:body use="literal"/>
            </output>
            <fault name="UnexpectedFault">
                <soap:fault name="UnexpectedFault" use="literal"/>
            </fault>
            <fault name="InvalidRequestFault">
                <soap:fault name="InvalidRequestFault" use="literal"/>
            </fault>
            <fault name="OperationNotAllowedFault">
                <soap:fault name="OperationNotAllowedFault" use="literal"/>
            </fault>
            <fault name="OperationNotSupportedFault">
                <soap:fault name="OperationNotSupportedFault" use="literal"/>
            </fault>
        </operation>
        <operation name="addDomain">
            <soap:operation
                soapAction="http://ist_phosphorus.eu/nsp/webservice/topology/addDomain" style="document"/>
            <input>
                <soap:body use="literal"/>
            </input>
            <output>
                <soap:body use="literal"/>
            </output>
            <fault name="UnexpectedFault">
                <soap:fault name="UnexpectedFault" use="literal"/>
            </fault>
            <fault name="InvalidRequestFault">
                <soap:fault name="InvalidRequestFault" use="literal"/>
            </fault>
            <fault name="OperationNotAllowedFault">
                <soap:fault name="OperationNotAllowedFault" use="literal"/>
            </fault>
            <fault name="DomainAlreadyExistsFault">
                <soap:fault name="DomainAlreadyExistsFault" use="literal"/>
            </fault>
            <fault name="OperationNotSupportedFault">
                <soap:fault name="OperationNotSupportedFault" use="literal"/>
            </fault>
        </operation>
        <operation name="deleteDomain">
            <soap:operation
                soapAction="http://ist_phosphorus.eu/nsp/webservice/topology/deleteDomain" style="document"/>
            <input>
                <soap:body use="literal"/>
            </input>
            <output>
                <soap:body use="literal"/>
            </output>
            <fault name="DomainNotFoundFault">
                <soap:fault name="DomainNotFoundFault" use="literal"/>
            </fault>
            <fault name="UnexpectedFault">
                <soap:fault name="UnexpectedFault" use="literal"/>
            </fault>
            <fault name="InvalidRequestFault">
                <soap:fault name="InvalidRequestFault" use="literal"/>
            </fault>
            <fault name="OperationNotAllowedFault">
                <soap:fault name="OperationNotAllowedFault" use="literal"/>
            </fault>
            <fault name="OperationNotSupportedFault">
                <soap:fault name="OperationNotSupportedFault" use="literal"/>
            </fault>
        </operation>
        <operation name="editDomain">
            <soap:operation
                soapAction="http://ist_phosphorus.eu/nsp/webservice/topology/editDomain" style="document"/>
            <input>
                <soap:body use="literal"/>
            </input>
            <output>
                <soap:body use="literal"/>
            </output>
            <fault name="DomainNotFoundFault">
                <soap:fault name="DomainNotFoundFault" use="literal"/>
            </fault>
            <fault name="UnexpectedFault">
                <soap:fault name="UnexpectedFault" use="literal"/>
            </fault>
            <fault name="InvalidRequestFault">
                <soap:fault name="InvalidRequestFault" use="literal"/>
            </fault>
            <fault name="OperationNotAllowedFault">
                <soap:fault name="OperationNotAllowedFault" use="literal"/>
            </fault>
            <fault name="OperationNotSupportedFault">
                <soap:fault name="OperationNotSupportedFault" use="literal"/>
            </fault>
        </operation>
        <operation name="getDomains">
            <soap:operation
                soapAction="http://ist_phosphorus.eu/nsp/webservice/topology/getDomains" style="document"/>
            <input>
                <soap:body use="literal"/>
            </input>
            <output>
                <soap:body use="literal"/>
            </output>
            <fault name="UnexpectedFault">
                <soap:fault name="UnexpectedFault" use="literal"/>
            </fault>
            <fault name="InvalidRequestFault">
                <soap:fault name="InvalidRequestFault" use="literal"/>
            </fault>
            <fault name="OperationNotAllowedFault">
                <soap:fault name="OperationNotAllowedFault" use="literal"/>
            </fault>
            <fault name="OperationNotSupportedFault">
                <soap:fault name="OperationNotSupportedFault" use="literal"/>
            </fault>
        </operation>
        <operation name="addEndpoint">
            <soap:operation
                soapAction="http://ist_phosphorus.eu/nsp/webservice/topology/addEndpoint" style="document"/>
            <input>
                <soap:body use="literal"/>
            </input>
            <output>
                <soap:body use="literal"/>
            </output>
            <fault name="DomainNotFoundFault">
                <soap:fault name="DomainNotFoundFault" use="literal"/>
            </fault>
            <fault name="EndpointAlreadyExistsFault">
                <soap:fault name="EndpointAlreadyExistsFault" use="literal"/>
            </fault>
            <fault name="UnexpectedFault">
                <soap:fault name="UnexpectedFault" use="literal"/>
            </fault>
            <fault name="InvalidRequestFault">
                <soap:fault name="InvalidRequestFault" use="literal"/>
            </fault>
            <fault name="OperationNotAllowedFault">
                <soap:fault name="OperationNotAllowedFault" use="literal"/>
            </fault>
            <fault name="OperationNotSupportedFault">
                <soap:fault name="OperationNotSupportedFault" use="literal"/>
            </fault>
        </operation>
        <operation name="deleteEndpoint">
            <soap:operation
                soapAction="http://ist_phosphorus.eu/nsp/webservice/topology/deleteEndpoint" style="document"/>
            <input>
                <soap:body use="literal"/>
            </input>
            <output>
                <soap:body use="literal"/>
            </output>
            <fault name="UnexpectedFault">
                <soap:fault name="UnexpectedFault" use="literal"/>
            </fault>
            <fault name="InvalidRequestFault">
                <soap:fault name="InvalidRequestFault" use="literal"/>
            </fault>
            <fault name="OperationNotAllowedFault">
                <soap:fault name="OperationNotAllowedFault" use="literal"/>
            </fault>
            <fault name="OperationNotSupportedFault">
                <soap:fault name="OperationNotSupportedFault" use="literal"/>
            </fault>
        </operation>
        <operation name="editEndpoint">
            <soap:operation
                soapAction="http://ist_phosphorus.eu/nsp/webservice/topology/editEndpoint" style="document"/>
            <input>
                <soap:body use="literal"/>
            </input>
            <output>
                <soap:body use="literal"/>
            </output>
            <fault name="UnexpectedFault">
                <soap:fault name="UnexpectedFault" use="literal"/>
            </fault>
            <fault name="InvalidRequestFault">
                <soap:fault name="InvalidRequestFault" use="literal"/>
            </fault>
            <fault name="OperationNotAllowedFault">
                <soap:fault name="OperationNotAllowedFault" use="literal"/>
            </fault>
            <fault name="OperationNotSupportedFault">
                <soap:fault name="OperationNotSupportedFault" use="literal"/>
            </fault>
        </operation>
        <operation name="getEndpoints">
            <soap:operation
                soapAction="http://ist_phosphorus.eu/nsp/webservice/topology/getEndpoints" style="document"/>
            <input>
                <soap:body use="literal"/>
            </input>
            <output>
                <soap:body use="literal"/>
            </output>
            <fault name="UnexpectedFault">
                <soap:fault name="UnexpectedFault" use="literal"/>
            </fault>
            <fault name="InvalidRequestFault">
                <soap:fault name="InvalidRequestFault" use="literal"/>
            </fault>
            <fault name="OperationNotAllowedFault">
                <soap:fault name="OperationNotAllowedFault" use="literal"/>
            </fault>
            <fault name="OperationNotSupportedFault">
                <soap:fault name="OperationNotSupportedFault" use="literal"/>
            </fault>
        </operation>
        <operation name="addLink">
            <soap:operation
                soapAction="http://ist_phosphorus.eu/nsp/webservice/topology/addLink" style="document"/>
            <input>
                <soap:body use="literal"/>
            </input>
            <output>
                <soap:body use="literal"/>
            </output>
            <fault name="UnexpectedFault">
                <soap:fault name="UnexpectedFault" use="literal"/>
            </fault>
            <fault name="InvalidRequestFault">
                <soap:fault name="InvalidRequestFault" use="literal"/>
            </fault>
            <fault name="OperationNotAllowedFault">
                <soap:fault name="OperationNotAllowedFault" use="literal"/>
            </fault>
            <fault name="OperationNotSupportedFault">
                <soap:fault name="OperationNotSupportedFault" use="literal"/>
            </fault>
        </operation>
        <operation name="deleteLink">
            <soap:operation
                soapAction="http://ist_phosphorus.eu/nsp/webservice/topology/deleteLink" style="document"/>
            <input>
                <soap:body use="literal"/>
            </input>
            <output>
                <soap:body use="literal"/>
            </output>
            <fault name="UnexpectedFault">
                <soap:fault name="UnexpectedFault" use="literal"/>
            </fault>
            <fault name="InvalidRequestFault">
                <soap:fault name="InvalidRequestFault" use="literal"/>
            </fault>
            <fault name="OperationNotAllowedFault">
                <soap:fault name="OperationNotAllowedFault" use="literal"/>
            </fault>
            <fault name="OperationNotSupportedFault">
                <soap:fault name="OperationNotSupportedFault" use="literal"/>
            </fault>
        </operation>
        <operation name="editLink">
            <soap:operation
                soapAction="http://ist_phosphorus.eu/nsp/webservice/topology/editLink" style="document"/>
            <input>
                <soap:body use="literal"/>
            </input>
            <output>
                <soap:body use="literal"/>
            </output>
            <fault name="UnexpectedFault">
                <soap:fault name="UnexpectedFault" use="literal"/>
            </fault>
            <fault name="InvalidRequestFault">
                <soap:fault name="InvalidRequestFault" use="literal"/>
            </fault>
            <fault name="OperationNotAllowedFault">
                <soap:fault name="OperationNotAllowedFault" use="literal"/>
            </fault>
            <fault name="OperationNotSupportedFault">
                <soap:fault name="OperationNotSupportedFault" use="literal"/>
            </fault>
        </operation>
        <operation name="getLinks">
            <soap:operation
                soapAction="http://ist_phosphorus.eu/nsp/webservice/topology/getLinks" style="document"/>
            <input>
                <soap:body use="literal"/>
            </input>
            <output>
                <soap:body use="literal"/>
            </output>
            <fault name="UnexpectedFault">
                <soap:fault name="UnexpectedFault" use="literal"/>
            </fault>
            <fault name="InvalidRequestFault">
                <soap:fault name="InvalidRequestFault" use="literal"/>
            </fault>
            <fault name="OperationNotAllowedFault">
                <soap:fault name="OperationNotAllowedFault" use="literal"/>
            </fault>
            <fault name="OperationNotSupportedFault">
                <soap:fault name="OperationNotSupportedFault" use="literal"/>
            </fault>
        </operation>
    </binding>
    <service name="topologyIFService">
        <port binding="topology:topologyIFBinding" name="topologyIFPort"/>
    </service>
</definitions>
